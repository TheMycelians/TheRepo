{"version":3,"sources":["styles/globalStyles.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","context/AppContext.js","components/HeaderContainer.jsx","components/MintDataView.jsx","components/MintArea.jsx","components/TitleContainer.jsx","components/StorySection.jsx","components/CarouselSection.jsx","components/FAQSection.jsx","components/FooterSection.jsx","components/Diamonds.jsx","components/UnauthedScreen.tsx","components/AuthedScreen.tsx","components/TokenView.tsx","components/HistorySection.tsx","App.js","fonts/RenoMono.otf","fonts/upheavtt.ttf","fonts/RoadRage.otf","fonts/Momo.otf","fonts/Roboto-Regular.ttf","fonts/Roboto-Light.ttf","fonts/ROGFontsv1.6-Regular.ttf","fonts/Sphere.otf","fonts/Puna.otf","fonts.js","index.js","context/chains.js"],"names":["borderAlternate","keyframes","props","aBorder","mainBreakPoint","mainColor","mainFont","opaqueBgStyles","backgroundColor","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","BigContainer","test","UnauthContainer","TextTitle","p","css","TextSubTitle","StyledLink","hr","a","HeaderDiv","img","socialDiv","iconDiv","connectionIndicator","Headerlinks","SecContainer","TextP","TextB","LogoDiv","button","ResponsiveWrapper","ResponsiveWrapperHeader","StyledLogo","StyledImgMain","StyledImgSplash","ResponsiveWrapperTraits","ResponsiveWrapperTrait","TextO","InputO","input","borderColor","MintBtn","WalletBox","video","TextTitleAnimated","aDelay","InputOAnimated","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","FZTOKEN","TOKEN","smartToken","on","updateAccount","location","reload","userchain","CHID","utils","toHex","toString","params","chainId","code","NAME","AppContext","React","createContext","AppProvider","children","useDispatch","useSelector","useState","walletAddress","setAddress","claimingNft","setClaimingNft","feedback","setFeedback","tokens","setTokens","brd","setbrd","bxsh","setbxsh","DOT","setDOT","setType","placement","setPlacement","currPage","setCurrPage","authPass","pw","setPw","authed","setAuthed","errmessage","Notification","style","background","color","header","closable","txmessage","mntmessage","Loader","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","DISPLAY_COST","WL_Display","GAS_LIMIT","MAX_PER_TX","MARKETPLACE","MARKETPLACE_LINK","Telegram","Discord","Twitter","SHOW_BACKGROUND","setConfig","getCost","step","getData","substring","getConfig","rawResponse","config","useEffect","useEthers","switchNetwork","deactivate","activateBrowserWallet","configObj","useConfig","connectionStatus","walletChainIDHex","walletChainID","formatUnits","BigInt","readOnlyUrls","Config","NFT","GEN","contractsList","setContractsList","contractABIs","Interface","tokenABI","getABIByAddress","tokenAddress","Object","entries","find","x","toLowerCase","includes","values","getFormattedETH","keys","formatEther","flattenItem","val","dec","Number","_hex","length","map","useContractMethods","callsArr","keepError","refresh","callsArg","idx","contractAddress","args","every","contract","Contract","callsFinal","filter","results","useCalls","forEach","result","value","undefined","decimals","resultsFlattened","resKeys","i","flattenResults","bgImages","MintPage","Story","Gallery","FAQ","History","royalDiamonds","footerIconSize","fileExt","metadata","rarity","caste","abilities","rewardMultiplier","CacheBgs","currSrc","src","display","maxWidth","CacheBgsNew","Image","useContractMethod","useCall","useContractMutation","useContractFunction","transactionName","send","getFormattedETHs","handleConnection","conStatus","useContractConfig","ConfigContractAddress","index","claimNFTs","price","toWei","gasLimit","totalGasLimit","String","toaster","push","mint","to","from","once","err","then","receipt","decrementtokens","newtokens","incrementtokens","maxTokens","Math","min","Provider","useAppContext","useContext","ConnectButton","buttonColor","wbStyle","onClick","size","fontSize","HeaderContainer","marginBottom","alt","borderRadius","opacity","MintDataView","nativeCurrencySymbol","networks","nativeCurrency","symbol","amount","setAmount","pword","setPword","NFTContractAddress","GenContractAddress","mutationObject","mintStatus","status","mintSend","calls","events","BigNumber","balanceOf","maxSupply","rawCost","rawWLcost","WLcost","verifyCh","realCost","saleColor","mintCost","parseEther","toFixed","ethBalance","useEtherBalance","notConnected","insufficientBalance","noneSelected","txPending","sigPending","mintSuccessful","txError","mintDisabled","width","onChange","e","target","strVal","parseInt","max","handleChange","disabled","newVal","handlePassChange","marginTop","textAlign","MintArea","currChar","setCurrChar","currImg","intervalId","setInterval","random","clearInterval","padding","s","Array","tempImg","styleObj","TitleContainer","StorySection","id","CarouselSection","currMetadata","maxHeight","FAQSection","WLCost","PanelGroup","accordion","bordered","Panel","fontFamily","defaultExpanded","margin","FooterSection","href","Date","getFullYear","Diamonds","opacityOverride","UnauthedScreen","canPass","solidityKeccak256","setTimeout","animatedInput","unauthContent","postAuthContent","AuthedScreen","TokenView","title","text","numImages","currTitle","selectionFn","justifyContent","border","minWidth","HistorySection","App","conf","shouldUpdate","y","newContractsList","backgroundImage","GlobalStyle","createGlobalStyle","ROG","Roboto","RobotoLight","Upheaval","RenoMono","Sphere","customChain","chainName","isTestChain","isLocalChain","multicallAddress","getExplorerAddressLink","address","getExplorerTransactionLink","transactionHash","rpcUrl","blockExplorerUrl","name","readOnlyChainId","ReactDOM","render","DAppProvider","document","getElementById"],"mappings":"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","file":"static/js/main.1458e6c1.chunk.js","sourcesContent":["import styled, { css, keyframes } from \"styled-components\";\n\nconst opaque = keyframes`\n\t\t0% {\n\t\t\topacity: 0;\n\t\t}\n\t\t50% {\n\t\t\topacity: 0.5;\n\t\t}\n\t\t100% {\n\t\t\topacity: 1;\n\t\t}\n  `;\n\nexport const borderAlternate = (props) => keyframes`\n\t\t0% {\n\t\t  border: 0px ${props.aBorder || \"FF0000\"}00 solid;\n\t\t}\n\t\t100% {\n\t\t  border: 3px ${props.aBorder || \"FF0000\"}FF solid;\n\t\t}\n  `;\n\nexport const mainBreakPoint = \"840px\";\nexport const mainColor = \"#FF407CFF\";\nexport const mainFont = \"RoadRage\";\nexport const opaqueBgStyles = {\n\tbackgroundColor: \"#00059E50\",\n\tbackgroundColor: \"#050F3880\",\n\tborderRadius: \"20px\",\n\tpadding: \"15px\",\n};\n\nexport const borderStyles = (props) => css`\n\t\t${borderAlternate(props)} 0.5s infinite alternate;\",\n  `;\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n\tbackground-color: #fff;\n\twidth: 100vw;\n\tdisplay: flex;\n\tflex-direction: column;\n\t// background-image: url('config/images/dojo night.png');\n\t// background-image: ${({ image }) =>\n\t\timage ? `url(${image})` : `url(config/images/dojo night.png)`};\n\tbackground-attachment: fixed;\n\tbackground-position: center;\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tmin-height: 100vh;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n\theight: 8px;\n\twidth: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n\theight: 16px;\n\twidth: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n\theight: 24px;\n\twidth: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n\theight: 32px;\n\twidth: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex: ${({ flex }) => (flex ? flex : 0)};\n\tflex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n\tjustify-content: ${({ jc }) => (jc ? jc : \"flex-center\")};\n\talign-items: ${({ ai }) => (ai ? ai : \"flex-center\")};\n\twidth: 100%;\n\tjustify-content: space-between;\n\t// @media (max-width: ${mainBreakPoint}) {\n\t// \tflex-direction: row;\n\t// \t// text-align: center;\n\t// \t// letter-spacing: 2px;\n\t// }\n`;\n\nexport const BigContainer = styled.div`\n  display: flex;\n  // flex: ${({ flex }) => (flex ? flex : 0)};\n  flex: 1;\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"center\")};\n  // justify-content: space-between;\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  // background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  // align-items: start;\n  width: 100%;\n  background-size: 100vw 100vh;\n  background-position: cover;\n  background-repeat: none;\n  height: max(100%, 100vmax));\n  height: 100vmax;\n  // height: 2000px;\n`;\n\nexport const CenterContainer = styled.div`\n\tbackground-color: silver;\n\tbackground-image: radial-gradient(\n\t\t\tcircle at 100% 150%,\n\t\t\tsilver 24%,\n\t\t\twhite 24%,\n\t\t\twhite 28%,\n\t\t\tsilver 28%,\n\t\t\tsilver 36%,\n\t\t\twhite 36%,\n\t\t\twhite 40%,\n\t\t\ttransparent 40%,\n\t\t\ttransparent\n\t\t),\n\t\tradial-gradient(\n\t\t\tcircle at 0px 150%,\n\t\t\tsilver 24%,\n\t\t\twhite 24%,\n\t\t\twhite 28%,\n\t\t\tsilver 28%,\n\t\t\tsilver 36%,\n\t\t\twhite 36%,\n\t\t\twhite 40%,\n\t\t\ttransparent 40%,\n\t\t\ttransparent\n\t\t),\n\t\tradial-gradient(\n\t\t\tcircle at 50% 100%,\n\t\t\twhite 10%,\n\t\t\tsilver 10%,\n\t\t\tsilver 23%,\n\t\t\twhite 23%,\n\t\t\twhite 30%,\n\t\t\tsilver 30%,\n\t\t\tsilver 43%,\n\t\t\twhite 43%,\n\t\t\twhite 50%,\n\t\t\tsilver 50%,\n\t\t\tsilver 63%,\n\t\t\twhite 63%,\n\t\t\twhite 71%,\n\t\t\ttransparent 71%,\n\t\t\ttransparent\n\t\t),\n\t\tradial-gradient(\n\t\t\tcircle at 100% 50%,\n\t\t\twhite 5%,\n\t\t\tsilver 5%,\n\t\t\tsilver 15%,\n\t\t\twhite 15%,\n\t\t\twhite 20%,\n\t\t\tsilver 20%,\n\t\t\tsilver 29%,\n\t\t\twhite 29%,\n\t\t\twhite 34%,\n\t\t\tsilver 34%,\n\t\t\tsilver 44%,\n\t\t\twhite 44%,\n\t\t\twhite 49%,\n\t\t\ttransparent 49%,\n\t\t\ttransparent\n\t\t),\n\t\tradial-gradient(\n\t\t\tcircle at 0px 50%,\n\t\t\twhite 5%,\n\t\t\tsilver 5%,\n\t\t\tsilver 15%,\n\t\t\twhite 15%,\n\t\t\twhite 20%,\n\t\t\tsilver 20%,\n\t\t\tsilver 29%,\n\t\t\twhite 29%,\n\t\t\twhite 34%,\n\t\t\tsilver 34%,\n\t\t\tsilver 44%,\n\t\t\twhite 44%,\n\t\t\twhite 49%,\n\t\t\ttransparent 49%,\n\t\t\ttransparent\n\t\t);\n\tbackground-size: 100px 50px;\n\t--darkreader-inline-bgcolor: #3c4143;\n\t--darkreader-inline-bgimage: radial-gradient(\n\t\t\tcircle at 100% 150%,\n\t\t\t#3c4143 24%,\n\t\t\t#181a1b 24%,\n\t\t\t#181a1b 28%,\n\t\t\t#3c4143 28%,\n\t\t\t#3c4143 36%,\n\t\t\t#181a1b 36%,\n\t\t\t#181a1b 40%,\n\t\t\trgba(0, 0, 0, 0) 40%,\n\t\t\trgba(0, 0, 0, 0)\n\t\t),\n\t\tradial-gradient(\n\t\t\tcircle at 0px 150%,\n\t\t\t#3c4143 24%,\n\t\t\t#181a1b 24%,\n\t\t\t#181a1b 28%,\n\t\t\t#3c4143 28%,\n\t\t\t#3c4143 36%,\n\t\t\t#181a1b 36%,\n\t\t\t#181a1b 40%,\n\t\t\trgba(0, 0, 0, 0) 40%,\n\t\t\trgba(0, 0, 0, 0)\n\t\t),\n\t\tradial-gradient(\n\t\t\tcircle at 50% 100%,\n\t\t\t#181a1b 10%,\n\t\t\t#3c4143 10%,\n\t\t\t#3c4143 23%,\n\t\t\t#181a1b 23%,\n\t\t\t#181a1b 30%,\n\t\t\t#3c4143 30%,\n\t\t\t#3c4143 43%,\n\t\t\t#181a1b 43%,\n\t\t\t#181a1b 50%,\n\t\t\t#3c4143 50%,\n\t\t\t#3c4143 63%,\n\t\t\t#181a1b 63%,\n\t\t\t#181a1b 71%,\n\t\t\trgba(0, 0, 0, 0) 71%,\n\t\t\trgba(0, 0, 0, 0)\n\t\t),\n\t\tradial-gradient(\n\t\t\tcircle at 100% 50%,\n\t\t\t#181a1b 5%,\n\t\t\t#3c4143 5%,\n\t\t\t#3c4143 15%,\n\t\t\t#181a1b 15%,\n\t\t\t#181a1b 20%,\n\t\t\t#3c4143 20%,\n\t\t\t#3c4143 29%,\n\t\t\t#181a1b 29%,\n\t\t\t#181a1b 34%,\n\t\t\t#3c4143 34%,\n\t\t\t#3c4143 44%,\n\t\t\t#181a1b 44%,\n\t\t\t#181a1b 49%,\n\t\t\trgba(0, 0, 0, 0) 49%,\n\t\t\trgba(0, 0, 0, 0)\n\t\t),\n\t\tradial-gradient(\n\t\t\tcircle at 0px 50%,\n\t\t\t#181a1b 5%,\n\t\t\t#3c4143 5%,\n\t\t\t#3c4143 15%,\n\t\t\t#181a1b 15%,\n\t\t\t#181a1b 20%,\n\t\t\t#3c4143 20%,\n\t\t\t#3c4143 29%,\n\t\t\t#181a1b 29%,\n\t\t\t#181a1b 34%,\n\t\t\t#3c4143 34%,\n\t\t\t#3c4143 44%,\n\t\t\t#181a1b 44%,\n\t\t\t#181a1b 49%,\n\t\t\trgba(0, 0, 0, 0) 49%,\n\t\t\trgba(0, 0, 0, 0)\n\t\t);\n`;\n\nexport const AmountContainer = styled.div`\n\tdisplay: flex;\n\tflex: ${({ flex }) => (flex ? flex : 0)};\n\tflex-direction: center;\n\tjustify-content: center;\n\talign-items: center;\n\t//border: 2px solid #A673EF;\n\tborder-radius: 10px;\n\t//box-shadow: 0px 0px 3px 0px #A673EF;\n`;\n\nexport const UnauthContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\t// flex: ${({ flex }) => (flex ? flex : 0)};\n\t// flex-direction: center;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 10px;\n\theight: 100vh;\n`;\n\nexport const TextTitle = styled.p`\n\tfont-family: ${mainFont};\n\tcolor: rgb(255, 168, 18);\n\tcolor: ${mainColor};\n\tfont-size: clamp(2.5rem, 4vw, 4rem);\n\tfont-weight: 1000;\n\tletter-spacing: 0.2rem;\n\tline-height: 1;\n\ttext-align: center;\n\tmargin-bottom: 2rem;\n\tdisplay: inline-block;\n\t${css`\n\t\tanimation: ${borderAlternate} 1s infinite alternate;\n\t`}\n\t@media (max-width: ${mainBreakPoint}) {\n\t\t// font-size: 25px;\n\t\ttext-align: center;\n\t\tletter-spacing: 2px;\n\t}\n`;\n\nexport const TextSub = styled.p`\n\tfont-family: \"${mainFont}\";\n\tcolor: ${mainColor};\n\tfont-size: 24px;\n\tfont-weight: 1000;\n\tletter-spacing: 8px;\n\tline-height: 1.6;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tfont-size: 20px;\n\t\tletter-spacing: 2px;\n\t}\n`;\n\nexport const TextTotal = styled.p`\n\tfont-family: \"${mainFont}\";\n\tcolor: ${mainColor};\n\tbackground-color: #4c0f52;\n\tfont-size: 1rem;\n\tfont-weight: 1000;\n\tletter-spacing: 2px;\n\tline-height: 1.6;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tfont-size: 0.75rem;\n\t\tletter-spacing: 2px;\n\t}\n`;\n\nexport const TextPrice = styled.p`\n\tfont-family: \"${mainFont}\";\n\tcolor: white;\n\tfont-size: 3rem;\n\tfont-weight: bold;\n\tletter-spacing: 8px;\n\tline-height: 1.6;\n\tborder: 2px solid midnightblue;\n\twidth: 400px;\n\tbackground: #9dc5f0;\n\ttext-align: center;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tfont-size: 20px;\n\t\tletter-spacing: 2px;\n\t\twidth: 200px;\n\t}\n`;\n\nexport const TextSubTitle = styled.p`\n\tfont-family: \"${mainFont}\";\n\tcolor: rgb(255, 168, 18);\n\t// font-size: 20px;\n\tfont-size: clamp(1rem, 2vw, 3rem);\n\tfont-weight: 600;\n\t// line-height: 1.6;\n\ttext-align: center;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tfont-size: 0.75rem;\n\t\tletter-spacing: 2px;\n\t\ttext-align: center;\n\t}\n`;\n\nexport const TextDescription = styled.p`\n\tcolor: rgb(255, 168, 18);\n\tfont-size: 60px;\n\tline-height: 1.6;\n`;\n\nexport const TEXTamount = styled.p`\n\tcolor: white;\n\tfont-size: 1.8rem;\n\tline-height: 1.6;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tfont-size: 20px;\n\t\tline-height: 0;\n\t}\n`;\n\nexport const StyledClickable = styled.div`\n\t:active {\n\t\topacity: 0.6;\n\t}\n`;\n\nexport const StyledHR = styled.hr`\n\tborder: 2px solid white;\n\tbackground-color: white;\n\tborder-radius: 2px;\n\twidth: 450px;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\twidth: 350px;\n\t}\n`;\n\nexport const StyledLink = styled.a`\n\tcolor: rgb(255, 168, 18);\n\tcolor: #0f2fff;\n\tcolor: ${mainColor};\n\tfont-size: 2rem;\n\tfont-size: clamp(1rem, 2vw, 3rem);\n\ttext-decoration: none;\n\tmargin-right: 2rem;\n\ttext-align: center;\n\tcursor: pointer;\n\t:hover {\n\t\tcolor: #ff8938;\n\t}\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tmargin-right: 0.75rem;\n\t\tmargin-top: 1rem;\n\t}\n`;\n\nexport const Icons = styled.img`\n\twidth: 30px;\n\theight: 30px;\n\tborder-radius: 50%;\n\tmargin-right: 1.2rem;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcursor: pointer;\n\t:hover {\n\t\ttransform: scale(1.5);\n\t\ttransition: transform 0.5s;\n\t}\n`;\n\nexport const HeaderDiv = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-right: 3.5rem;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tmargin-right: 0;\n\t\tmargin-top: 10px;\n\t\tmargin-bottom: 20px;\n\t\tflex-direction: column;\n\t}\n`;\n\nexport const socialDiv = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-around;\n\talign-items: center;\n\twidth: clamp(200px, 30vw, 400px);\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tmargin-right: 0;\n\t\tmargin-top: 20px;\n\t\tflex-direction: row;\n\t}\n`;\n\nexport const iconDiv = styled.div`\n\ttransition: all 0.5s;\n\t:hover {\n\t\ttransform: scale(1.5);\n\t}\n`;\n\nexport const connectionIndicator = styled.div`\n  font-size: 1rem;\n  animation: fadein 1s alternate infinite;\n  @keyframes fadein {\n    0% {scale(1);}\n    100%: {scale(2);}\n  }  \n`;\n\nexport const Headerlinks = styled.div`\n\tfont-family: ${mainFont};\n\tdisplay: flex;\n\talign-items: center;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tmargin-top: 10px;\n\t\tmargin-bottom: 10px;\n\t}\n`;\n\nexport const SecContainer = styled.div`\n\tdisplay: flex;\n\tflex: ${({ flex }) => (flex ? flex : 0)};\n\tflex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n\tjustify-content: center;\n\talign-items: center;\n\t// background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n\tbackground-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n\twidth: 100%;\n\t// height: 100vh;\n\t// margin: 0 5rem;\n\t// height: auto;\n`;\n\nexport const TextP = styled.p`\n\tfont-family: \"${mainFont}\";\n\tcolor: rgb(255, 168, 18);\n\tcolor: #45b1e8;\n\tcolor: ${mainColor};\n\tbackground-color: #050f3880;\n\tborder-radius: 20px;\n\tpadding: 15px;\n\ttext-align: center;\n\tfont-size: clamp(1.4rem, 1.8vw, 2.2rem);\n\tletter-spacing: 0.05rem;\n\tline-height: 1.8rem;\n\twidth: 85%;\n`;\n\nexport const TextB = styled.p`\n\tfont-family: \"${mainFont}\";\n\tcolor: ${mainColor};\n\ttext-align: center;\n\tfont-size: clamp(1.2rem, 2vw, 2.5rem);\n\tletter-spacing: 2px;\n\tline-height: 2rem;\n`;\n\nexport const ExploreBTN = styled.button`\n\tfont-family: \"${mainFont}\";\n\tpadding: 10px;\n\tfont-size: 1rem;\n\tborder-radius: 40px;\n\tborder: none;\n\tbackground: linear-gradient(\n\t\t86.57deg,\n\t\t#d8ae43 6.92%,\n\t\trgba(255, 92, 0, 0.79) 100.73%\n\t);\n\tpadding: 10px;\n\tletter-spacing: 2px;\n\tfont-weight: bold;\n\tcolor: white;\n\twidth: 270px;\n\theight: 50px;\n\tcursor: pointer;\n\tbox-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n\t-webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n\t-moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n\t:active {\n\t\tbox-shadow: none;\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t}\n\t:hover {\n\t\tcolor: black;\n\t}\n\t@media (max-width: ${mainBreakPoint}) {\n\t\twidth: 200px;\n\t\theight: 50px;\n\t\tfont-size: 0.75rem;\n\t}\n`;\n\nexport const imgContainer = styled.div`\n\tdisplay: flex;\n\tbackground: #171717;\n\tborder-radius: 40px;\n\twidth: max-content;\n\tmargin-top: 5%;\n\talign-items: center;\n\tjustify-content: center;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\twidth: 100%;\n\t}\n`;\n\nexport const workContainer = styled.div`\n\tdisplay: flex;\n\tmargin-top: 5%;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: row;\n\tgap: 5%;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tflex-direction: column;\n\t}\n`;\n\nexport const Box = styled.div`\n\theight: 120px;\n\twidth: 250px;\n\tborder-radius: 20px;\n\tbackground: #171717;\n\tpadding: 10px;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tmargin-top: 10px;\n\t}\n\t:hover {\n\t\ttransform: scale(1.2);\n\t}\n`;\n\nexport const innerbox = styled.div`\n\tflex-direction: row;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\talign-content: center;\n\tpadding: 10px;\n`;\n\nexport const innerIcons = styled.img`\n\twidth: 45px;\n\theight: 45px;\n\tborder-radius: 50%;\n\tmargin-right: 1.2rem;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcursor: pointer;\n`;\n\nexport const TextPBOX = styled.p`\n\ttext-align: left;\n\twidth: 125px;\n\tfont-size: 1rem;\n`;\n\nexport const Textbox = styled.p`\n\ttext-align: left;\n\tfont-size: 0.75rem;\n`;\n\nexport const CBOX = styled.div`\n\twidth: 30%;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\twidth: 80%;\n\t}\n`;\n\nexport const StyledButton = styled.button`\n\tfont-family: \"${mainFont}\";\n\tpadding: 10px;\n\tfont-size: 1rem;\n\tborder-radius: 6px;\n\tborder: none;\n\tbackground-color: black;\n\tpadding: 10px;\n\tletter-spacing: 2px;\n\tfont-weight: bold;\n\tcolor: white;\n\twidth: 270px;\n\theight: 50px;\n\tcursor: pointer;\n\tbox-shadow: 0px 6px 0px -2px black;\n\t-webkit-box-shadow: 0px 6px 0px -2px black;\n\t-moz-box-shadow: 0px 6px 0px -2px black;\n\t:active {\n\t\tbox-shadow: none;\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t}\n\t:hover {\n\t\tcolor: silver;\n\t}\n\t@media (max-width: ${mainBreakPoint}) {\n\t\twidth: 200px;\n\t\theight: 50px;\n\t\tfont-size: 0.75rem;\n\t}\n`;\n\nexport const StyledRoundButton = styled.button`\n\tpadding: 10px;\n\tborder-radius: 10px;\n\tborder: none;\n\tbackground-color: transparent;\n\tpadding: 10px;\n\tfont-weight: bold;\n\tfont-size: 30px;\n\tcolor: white;\n\twidth: 40px;\n\theight: 40px;\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\t:active {\n\t\tbox-shadow: none;\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t}\n\t:hover {\n\t\tcolor: silver;\n\t}\n`;\n\nexport const CTNButton = styled.button`\n\tfont-family: \"${mainFont}\";\n\tfont-size: 1rem;\n\tborder-radius: 0.5rem;\n\tborder: none;\n\tbackground-color: black;\n\tbackground-color: #4c0f52;\n\tpadding: 1rem;\n\tletter-spacing: 0.1rem;\n\tfont-weight: bold;\n\tcolor: #e10f96;\n\twidth: 270px;\n\theight: 50px;\n\tcursor: pointer;\n\t// box-shadow: 0px 6px 0px -2px black;\n\t// -webkit-box-shadow: 0px 6px 0px -2px black;\n\t// -moz-box-shadow: 0px 6px 0px -2px black;\n\t:active {\n\t\tbox-shadow: none;\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t}\n\t:hover {\n\t\tcolor: silver;\n\t}\n\t@media (max-width: ${mainBreakPoint}) {\n\t\twidth: 200px;\n\t\theight: 50px;\n\t\tfont-size: 0.75rem;\n\t}\n`;\n\nexport const Maxbtn = styled.button`\n\tfont-family: \"${mainFont}\";\n\tfont-size: 0.75rem;\n\tborder-radius: 10px;\n\tbackground-color: black;\n\tborder: 2px solid black;\n\tfont-weight: bold;\n\tcolor: white;\n\twidth: 80px;\n\theight: 30px;\n\tcursor: pointer;\n\tletter-spacing: 1px;\n\t:hover {\n\t\tcolor: black;\n\t}\n\t@media (max-width: ${mainBreakPoint}) {\n\t\twidth: 200px;\n\t\theight: 50px;\n\t\tfont-size: 0.75rem;\n\t}\n`;\n\nexport const LogoDiv = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\talign-content: center;\n\tgap: 10%;\n\twidth: 200px;\n\t// max-height: 100%\n`;\n\nexport const ResponsiveWrapper = styled.div`\n\tdisplay: flex;\n\t// flex: 1;\n\t// overflow: auto;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin: auto;\n\twidth: auto;\n\tmax-width: 90%;\n\t// height: clamp(200px, auto, 1200px);\n\theight: max-content;\n\tborder: 2px solid white;\n\tborder-radius: 40px;\n\tbackground-color: #4ecefb55;\n\t// height: 50%;\n\t@media (min-width: ${mainBreakPoint}) {\n\t\tflex-direction: row;\n\t\t// justify-content\n\t}\n`;\n\nexport const ResponsiveWrapperHeader = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n\tjustify-content: space-around;\n\talign-items: center;\n\twidth: 100%;\n\tmax-height: clamp(100px, 10vh, 200px);\n\tpadding: 10px;\n\t// background-color : #4ecefb;\n\t@media (min-width: ${mainBreakPoint}) {\n\t\tflex-direction: row;\n\t}\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tmax-height: 300px;\n\t}\n`;\n\nexport const StyledLogo = styled.img`\n\tdisplay: flex;\n\t// max-height: 100%;\n\t// max-width: 70%;\n\twidth: clamp(150px, 20vw, 70%);\n\t// height: 100%;\n\t@media (max-width: 566px) {\n\t\t// width: 150px;\n\t}\n\ttransition: width 0.5s;\n\ttransition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n\tmargin-right: 1rem;\n\twidth: 80%;\n\tborder-radius: 1rem;\n\t@media (min-width: 900px) {\n\t\twidth: 450px;\n\t}\n\t@media (min-width: 1000px) {\n\t\twidth: 450px;\n\t}\n\ttransition: width 0.5s;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\twidth: 200px;\n\t}\n`;\n\nexport const StyledImgMain = styled.img`\n\tmargin-right: 1rem;\n\tmargin-bottom: 1.5rem;\n\t// min-width: 20vw;\n\t// max-width: 100%;\n\t// height: 50%\n\twidth: clamp(40%, 30vw, 60%);\n\t// max-height: 100%\n\tborder-radius: 1rem;\n\ttransition: all width 0.5s;\n\tanimation: fadein 1s;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\t// width: 80%;\n\t}\n\t@keyframes fadein {\n\t\t0% {\n\t\t\topacity: 0;\n\t\t}\n\t\t100%: {\n\t\t\topacity: 1;\n\t\t}\n\t}\n`;\n\nexport const StyledImgSplash = styled.img`\n\tmargin-right: 1rem;\n\twidth: clamp(50%, 30vmax, 80%);\n\tborder-radius: 100rem;\n\ttransition: all width 1s;\n\tanimation: fadein 1s alternate infinite;\n\topacity: 0.75;\n\t@keyframes fadein {\n\t\t0% {\n\t\t\topacity: 0;\n\t\t}\n\t\t100%: {\n\t\t\topacity: 0.75;\n\t\t}\n\t}\n`;\n\nexport const ResponsiveWrapperTraits = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tgap: 2rem;\n\tflex-direction: column;\n\tjustify-content: space-around;\n\talign-items: center;\n\t// margin: 0 auto;\n\t// width: auto;\n\theight: clamp(700px, 100%, 1000px);\n\t// width: 90%\n\t// max-width: 90%;\n\t// min-height: 100%;\n\t// border: 2px solid white;\n\t// border-radius: 40px;\n\t// background-color: #4ecefb55;\n\t// height: 50%;\n\t@media (max-width: 566px) {\n\t\t// height: 500px;\n\t}\n`;\n\nexport const ResponsiveWrapperTrait = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  margin: auto;\n  width: auto;\n  gap: clamp(20px, 5vw, 50px);\n  // max-width: 90%;\n  width: 90%;\n  height: 100%;\n  }\n`;\n\nexport const TextO = styled.p`\n\tfont-family: \"${mainFont}\";\n\tcolor: ${mainColor};\n\ttext-align: left;\n\tfont-size: clamp(1rem, 3vmax, 3rem);\n\tletter-spacing: 0.05rem;\n\tline-height: 1.8rem;\n\twidth: 85%;\n\tanimation: fadein 1s;\n\t@keyframes fadein {\n\t\t0% {\n\t\t\topacity: 0;\n\t\t}\n\t\t100% {\n\t\t\topacity: 1;\n\t\t}\n\t}\n`;\n\nexport const InputO = styled.input`\n\tfont-family: \"${mainFont}\";\n\tcolor: ${mainColor};\n\ttext-align: center;\n\tbackground: #0000;\n\tfont-size: clamp(1rem, 3vmax, 3rem);\n\twidth: clamp(80px, 5vw, 150px);\n\tborder: 0;\n\tborder-bottom: 2px solid ${({ borderColor }) => borderColor || \"red\"};\n\t:focus {\n\t\t// border:0;\n\t\toutline: none;\n\t}\n`;\n\nexport const MintBtn = styled.button`\n\tfont-family: \"${mainFont}\";\n\tborder-radius: 1rem;\n\twidth: clamp(180px, 10vw, 300px);\n\theight: clamp(50px, 100%, 150px);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tborder: 2px solid green;\n\tbackground: #050f3880;\n\tpadding: 10px;\n\tfont-size: clamp(0.7rem, 3vmax, 1.5rem);\n\tpadding: 10px;\n\tletter-spacing: 2px;\n\tcolor: green;\n\twidth: 100%;\n\t// height: 50px;\n\tcursor: pointer;\n\t:active {\n\t\tbox-shadow: none;\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t}\n\t:hover {\n\t\tcolor: silver;\n\t\t// font-size: clamp(1rem, 4vmax, 1.8rem);\n\t}\n\t:disabled {\n\t\tborder: 2px solid gray;\n\t\tcolor: gray;\n\t\t// background: gray;\n\t}\n`;\n\nexport const StyledVid = styled.video`\n\tmargin-right: 1rem;\n\twidth: 70%;\n\tborder-radius: 1rem;\n\t@media (min-width: 900px) {\n\t\twidth: 450px;\n\t\twidth: 70%;\n\t}\n\t@media (min-width: 1000px) {\n\t\twidth: 450px;\n\t\twidth: 70%;\n\t}\n\ttransition: width 0.5s;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\twidth: 200px;\n\t\twidth: 70%;\n\t}\n`;\n\nexport const Styledroad = styled.img`\n\twidth: 100%;\n\tborder-radius: 5px;\n\ttransition: width 0.5s;\n`;\n\nexport const StyledImgSmall = styled.img`\n\twidth: 220px;\n\theight: 220px;\n\tborder-radius: 5px;\n\t@media (min-width: 900px) {\n\t\twidth: 220px;\n\t\theight: 220px;\n\t}\n\t@media (min-width: 1000px) {\n\t\twidth: 220px;\n\t\theight: 220px;\n\t}\n\ttransition: width 0.5s;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\twidth: 200px;\n\t}\n`;\n\nexport const StyledLinkBottom = styled.a`\n\t// color: var(--secondary);\n\tcolor: #5e99ff;\n\t// background-color: #5e99ff;\n\ttext-decoration: none;\n\tfont-family: ${mainFont};\n\tfont-size: 4rem;\n`;\n\nexport const WalletBox = styled.div`\n\ttext-decoration: none;\n\tborder-radius: 1rem;\n\tbackground-color: transparent;\n\t// padding: 10px;\n\t// font-weight: bold;\n\tfont-size: 1rem;\n\tcursor: pointer;\n\twidth: clamp(180px, 10vw, 300px);\n\theight: clamp(50px, 5vw, 60px);\n\tdisplay: flex;\n\t// gap: 5%;\n\talign-items: center;\n\tjustify-content: center;\n\tborder: 2px solid #ff0800ff;\n\tbackground: #050f3880;\n\t// box-shadow: 0px 4px 0px -2px white;\n\t// -webkit-box-shadow: 0px 4px 0px -2px white;\n\t// -moz-box-shadow: 0px 4px 0px -2px white;\n\t@media (max-width: ${mainBreakPoint}) {\n\t\tmargin-top: 20px;\n\t\torder: -1;\n\t}\n`;\n\nexport const TextTitleAnimated = styled.p`\n\tfont-family: ${mainFont};\n\tcolor: ${mainColor};\n\twidth: auto;\n\tfont-size: clamp(2.5rem, 4vw, 4rem);\n\tfont-weight: 1000;\n\toverflow: hidden;\n\twhite-space: nowrap;\n\tletter-spacing: 0.2rem;\n\tline-height: 1;\n\t// border-right: 0.15em solid orange;\n\tmargin: 0 auto;\n\ttext-align: center;\n\tmargin-bottom: 2rem;\n\t// display: inline-block;\n\t// opacity: 0;\n\t// visibility: hidden;\n\tanimation: typing 2s steps(40, end)\n\t\t\t${({ aDelay }) => (aDelay ? aDelay : \"0\")}s,\n\t\topaque ${({ aDelay }) => (aDelay ? aDelay * 1.01 : \"0\")}s ease normal\n\t\t\tforwards;\n\n\t@keyframes typing {\n\t\tfrom {\n\t\t\twidth: 0;\n\t\t}\n\t\tto {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\n\t@keyframes opaque {\n\t\t0% {\n\t\t\topacity: 0;\n\t\t}\n\t\t99.99% {\n\t\t\topacity: 0;\n\t\t}\n\t\t100% {\n\t\t\topacity: 1;\n\t\t}\n\t}\n`;\n\nexport const InputOAnimated = styled.input`\n\tfont-family: \"${mainFont}\";\n\tcolor: ${mainColor};\n\ttext-align: center;\n\tbackground: #0000;\n\tfont-size: clamp(1rem, 3vmax, 3rem);\n\twidth: clamp(300px, 25vw, 500px);\n\tborder: 0;\n\tborder-bottom: 2px solid red;\n\t:focus {\n\t\t// border:0;\n\t\toutline: none;\n\t}\n\tanimation: opaque ${({ aDelay }) => (aDelay ? aDelay : \"0\")}s ease normal\n\t\tforwards;\n\n\t@keyframes opaque {\n\t\t0% {\n\t\t\topacity: 0;\n\t\t}\n\t\t99.9% {\n\t\t\topacity: 0;\n\t\t}\n\t\t100% {\n\t\t\topacity: 1;\n\t\t}\n\t}\n`;\n\n// .line__1,\n// .line__2 {\n//   white-space: nowrap; /* keep text in one line */\n//   overflow: hidden; /* hide text behind the cursor */\n//   margin: 0.5rem auto;\n//   font-family: \"Major Mono Display\", monospace;\n//   font-size: 2rem;\n//   font-weight: bold;\n// }\n\n// .line__1 {\n//   border-right: 2px solid rgba(17, 17, 17, 0.9);\n\n//   /* define animation types for text + cursor */\n//   animation: animated-text__1 6s steps(30, end) 1s 1 normal both,\n//     animated-cursor__1 900ms steps(30, end) 8;\n// }\n\n// .line__2 {\n//   border-right: 2px solid rgba(17, 17, 17, 0.9);\n\n//   /* define animation types for text + cursor */\n//   animation: animated-text__2 5s steps(30, end) 1s 1 normal both,\n//     animated-cursor__2 900ms steps(30, end) infinite;\n//   -webkit-animation-delay: 7s;\n//   animation-delay: 7s;\n// }\n\n// @keyframes animated-text__1 {\n//   from {\n//     width: 0;\n//   }\n//   to {\n//     width: 45rem;\n//   }\n// }\n\n// @keyframes animated-text__2 {\n//   from {\n//     width: 0;\n//   }\n//   to {\n//     width: 29rem;\n//   }\n// }\n","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\n// let totalSupply = await store.getState().blockchain.smartContract.methods.totalSupply().call();\n\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //    .getState()\n      //    .blockchain.smartContract.methods.getPrice()\n      //    .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\n\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n            const FZTOKEN = new Web3EthContract(\n              abi,\n              CONFIG.TOKEN\n            );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              smartToken: FZTOKEN,\n              web3: web3,\n            })\n          );\n\n\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n\n          // Add listeners end\n        }\n        else {\n          let userchain = CONFIG.NETWORK.ID;\n          let CHID = Web3.utils.toHex(userchain.toString());\n          try {\n            await ethereum.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{ chainId: CHID }],\n            });\n          } catch (switchError) {\n            // This error code indicates that the chain has not been added to MetaMask.\n            if (switchError.code === 4902) {\n              dispatch(connectFailed(`Please Add ${CONFIG.NETWORK.NAME} Network to your Metamask.`));\n            }\n          }\n        }\n\n      }\n      \n      \n      catch (err) {\n        dispatch(connectFailed(\"Something went wrong. Please refersh and try again\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Please install Metamask.\"));\n    } \n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","// import * as React from 'react'\nimport React, {\n\tuseEffect,\n\tuseState,\n\tuseRef,\n\tcreateContext,\n\tuseContext,\n} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../redux/data/dataActions\";\nimport Web3 from \"web3\";\nimport { Notification, toaster } from \"rsuite\";\nimport { Loader } from \"rsuite\";\nimport { formatEther } from \"@ethersproject/units\";\nimport {\n\tuseCall,\n\tuseCalls,\n\tERC20Interface,\n\tuseContractFunction,\n\tuseEthers,\n\tuseConfig,\n} from \"@usedapp/core\";\nimport { Contract, utils } from \"ethers\";\nimport tokenABI from \"../ABIs/tokenABI.json\";\nimport NFT from \"../ABIs/NFT.json\";\nimport GEN from \"../ABIs/GEN.json\";\nimport Config from \"../ABIs/Config.json\";\n\nexport const AppContext = React.createContext();\n\nexport const AppProvider = ({ children }) => {\n\tconst dispatch = useDispatch();\n\tconst blockchain = useSelector((state) => state.blockchain);\n\tconst data = useSelector((state) => state.data);\n\tconst [walletAddress, setAddress] = useState(\"Not Connected\");\n\tconst [claimingNft, setClaimingNft] = useState(false);\n\tconst [feedback, setFeedback] = useState(``);\n\tconst [tokens, setTokens] = useState(1);\n\tconst [brd, setbrd] = useState(\"2px solid #FFFFFF\");\n\tconst [bxsh, setbxsh] = useState(\"0px 0px 3px 0px #FFFFFF\");\n\tconst [DOT, setDOT] = useState(\"red\");\n\tconst [type, setType] = React.useState(\"info\");\n\tconst [placement, setPlacement] = React.useState(\"topStart\");\n\tconst [currPage, setCurrPage] = React.useState(\"Story\");\n\tconst [authPass, setAuthPass] = useState(\n\t\t\"0xe2b44128e989070cf6f2340fe4507fb131681bbdfc2867d9b3f88ab6a27a08bb\"\n\t);\n\tconst [pw, setPw] = useState(\"\");\n\tconst [authed, setAuthed] = useState(false);\n\n\tconst errmessage = (\n\t\t<Notification\n\t\t\tstyle={{ background: \"black\", color: \"white\" }}\n\t\t\ttype={\"error\"}\n\t\t\theader={\"error\"}\n\t\t\tclosable\n\t\t>\n\t\t\tSorry, something went wrong please try again later.\n\t\t</Notification>\n\t);\n\tconst txmessage = (\n\t\t<Notification\n\t\t\tstyle={{ background: \"black\", color: \"white\" }}\n\t\t\ttype={\"success\"}\n\t\t\theader={\"success\"}\n\t\t\tclosable\n\t\t>\n\t\t\tCongrats, Mint Was successful.\n\t\t</Notification>\n\t);\n\tconst mntmessage = (\n\t\t<Notification\n\t\t\tstyle={{ background: \"black\", color: \"white\" }}\n\t\t\ttype={\"info\"}\n\t\t\theader={\"stand by\"}\n\t\t\tclosable\n\t\t>\n\t\t\t<Loader /> Minting in Progress....\n\t\t</Notification>\n\t);\n\n\tconst [CONFIG, setConfig] = useState({\n\t\tCONTRACT_ADDRESS: \"\",\n\t\tSCAN_LINK: \"\",\n\t\tNETWORK: {\n\t\t\tNAME: \"\",\n\t\t\tSYMBOL: \"\",\n\t\t\tID: 0,\n\t\t},\n\t\tNFT_NAME: \"\",\n\t\tSYMBOL: \"\",\n\t\tMAX_SUPPLY: 1,\n\t\tDISPLAY_COST: 0,\n\t\tWL_Display: 0,\n\t\tGAS_LIMIT: 0,\n\t\tMAX_PER_TX: 0,\n\t\tMARKETPLACE: \"\",\n\t\tMARKETPLACE_LINK: \"\",\n\t\tTelegram: \"\",\n\t\tDiscord: \"\",\n\t\tTwitter: \"\",\n\t\tSHOW_BACKGROUND: false,\n\t});\n\n\tconst getCost = (step) => {\n\t\treturn CONFIG.DISPLAY_COST * step;\n\t\t// let start = Number(data.totalSupply) ?? 0;\n\t\t// return getRealPrice(start, step) / 10000;\n\t};\n\n\tconst claimNFTs = () => {\n\t\t// let cost = CONFIG.DISPLAY_COST * tokens;\n\t\tlet cost = getCost(tokens);\n\t\tlet price = Web3.utils.toWei(cost.toString(), \"ether\");\n\t\tlet gasLimit = CONFIG.GAS_LIMIT;\n\t\tlet totalGasLimit = String(gasLimit);\n\t\tconsole.log(\"Cost: \", price);\n\t\tconsole.log(\"Gas limit: \", totalGasLimit);\n\t\tconsole.log(`Dispaying using args: ${blockchain.account}, ${tokens}`);\n\t\tsetFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n\t\tsetClaimingNft(true);\n\t\tsetbrd(\"2px solid yellow\");\n\t\tsetbxsh(\"0px 0px 3px 0px yellow\");\n\t\ttoaster.push(mntmessage, { placement });\n\t\tblockchain.smartContract.methods\n\t\t\t.mint(blockchain.account, tokens)\n\t\t\t.send({\n\t\t\t\t//gasLimit: String(totalGasLimit),\n\t\t\t\t//gasPrice: String(Web3.utils.toWei('20', 'gwei')),\n\t\t\t\tto: CONFIG.CONTRACT_ADDRESS,\n\t\t\t\tfrom: blockchain.account,\n\t\t\t\tvalue: price,\n\t\t\t})\n\t\t\t.once(\"error\", (err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetFeedback(\n\t\t\t\t\t\"Sorry, something went wrong please try again later.\"\n\t\t\t\t);\n\t\t\t\tsetClaimingNft(false);\n\t\t\t\ttoaster.push(errmessage, { placement });\n\t\t\t\tsetbrd(\"2px solid red\");\n\t\t\t\tsetbxsh(\"0px 0px 3px 0px red\");\n\t\t\t})\n\t\t\t.then((receipt) => {\n\t\t\t\tconsole.log(receipt);\n\t\t\t\tsetFeedback(\n\t\t\t\t\t`Congratulations, you have just minted your very own ${CONFIG.NFT_NAME} NFT!`\n\t\t\t\t);\n\t\t\t\ttoaster.push(txmessage, { placement });\n\t\t\t\tsetbrd(\"2px solid green\");\n\t\t\t\tsetbxsh(\"0px 0px 3px 0px green\");\n\t\t\t\tsetClaimingNft(false);\n\t\t\t\tdispatch(fetchData(blockchain.account));\n\t\t\t});\n\t};\n\n\tconst decrementtokens = () => {\n\t\tlet newtokens = tokens - 1;\n\t\tif (newtokens < 1) {\n\t\t\tnewtokens = 1;\n\t\t}\n\t\tsetTokens(newtokens);\n\t};\n\n\tconst incrementtokens = () => {\n\t\tlet newtokens = tokens + 1;\n\t\tlet maxTokens = Math.min(\n\t\t\tCONFIG.MAX_SUPPLY - data.totalSupply,\n\t\t\tCONFIG.MAX_PER_TX\n\t\t);\n\t\tif (newtokens > maxTokens) {\n\t\t\tnewtokens = maxTokens;\n\t\t}\n\t\tsetTokens(newtokens);\n\t};\n\n\tconst getData = () => {\n\t\tif (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n\t\t\tdispatch(fetchData(blockchain.account));\n\t\t\tsetAddress(\n\t\t\t\tblockchain.account.substring(0, 4) +\n\t\t\t\t\t\"...\" +\n\t\t\t\t\tblockchain.account.substring(38, 42)\n\t\t\t);\n\t\t\tsetDOT(\"green\");\n\t\t}\n\t};\n\n\tconst getConfig = async ({ setConfig }) => {\n\t\tconst configResponse = await fetch(\"/config/config.json\", {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAccept: \"application/json\",\n\t\t\t},\n\t\t});\n\t\tconst rawResponse = await configResponse;\n\t\tconst config = await rawResponse.json();\n\t\tsetConfig(config);\n\t};\n\n\tconst useContractConfig = ({ refresh = \"everyBlock\" }) => {\n\t\tconst configObj = {};\n\t\tconst ConfigContractAddress = contractsList.Config;\n\t\tconst calls = [\n\t\t\t{\n\t\t\t\tcontractAddress: ConfigContractAddress,\n\t\t\t\tmethod: \"getConfig\",\n\t\t\t\targs: [],\n\t\t\t},\n\t\t];\n\t\tconst values =\n\t\t\tConfigContractAddress &&\n\t\t\tuseContractMethods(calls, { keepError: true, dec: 0, refresh });\n\t\tif (typeof values === \"object\" && values?.getConfig) {\n\t\t\tconst { getConfig } = values;\n\n\t\t\tif (getConfig?.length && getConfig?.length > 0) {\n\t\t\t\tfor (let index = 0; index < getConfig.length; index += 2) {\n\t\t\t\t\tconfigObj[getConfig[index]] = getConfig[index + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn configObj;\n\t};\n\n\t// const setContractConfig = () => {\n\t// \tconst configObj = getContractConfig();\n\t// \tif (\n\t// \t\t!!configObj &&\n\t// \t\ttypeof configObj === \"object\" &&\n\t// \t\tObject.keys(configObj)?.length > 0\n\t// \t) {\n\t// \t\tsetContractsList(...contractsList, ...configObj);\n\t// \t\tconsole.log(\"configObj: \", configObj);\n\t// \t}\n\t// };\n\n\tuseEffect(() => {\n\t\tgetConfig({ setConfig });\n\t}, []);\n\n\tuseEffect(() => {\n\t\tgetData();\n\t}, [blockchain.account]);\n\n\tconst {\n\t\taccount,\n\t\tchainId,\n\t\tswitchNetwork,\n\t\tdeactivate,\n\t\tactivateBrowserWallet,\n\t} = useEthers();\n\tconst configObj = useConfig();\n\n\tconst connectionStatus = () => {\n\t\tconst walletChainIDHex = window?.ethereum?.chainId || chainId;\n\t\tconst walletChainID =\n\t\t\t(walletChainIDHex &&\n\t\t\t\tutils.formatUnits(BigInt(walletChainIDHex).toString(), 0)) ||\n\t\t\tchainId;\n\t\treturn !account\n\t\t\t? -1\n\t\t\t: walletChainID && !configObj.readOnlyUrls[walletChainID]\n\t\t\t? 0\n\t\t\t: 1;\n\t};\n\n\tconst handleConnection = () => {\n\t\tconst conStatus = connectionStatus();\n\t\tconStatus == -1 && activateBrowserWallet();\n\t\tconStatus == 0 && switchNetwork(CONFIG.NETWORK.ID || 1);\n\t\tconStatus == 1 && deactivate();\n\t};\n\n\tconst [contractsList, setContractsList] = useState({\n\t\tConfig: \"0xb61E4E1B89cd9ec6282337e702929480b2E8f569\",\n\t\tNFT: \"0xB8fDD35d33075D0C95D45fF004aD7f625d1787C5\",\n\t\tGEN: \"0x3aD026833277eA79270fD8FA0Be397100118EE5b\",\n\t});\n\t// const contractsList = {s\n\t//   IkNFT: '0xBdE977F5Deca3325062D24766B25059AF05E2F1e',\n\t//   IkGEN: '0xb6A781b16bAD4E15725Db25157e11cD82A251760',\n\t// }\n\n\tconst contractABIs = {\n\t\t\"0x6982508145454ce325ddbe47a25d4ec3d2311933\": new utils.Interface(\n\t\t\ttokenABI\n\t\t),\n\t\t\"0xB8fDD35d33075D0C95D45fF004aD7f625d1787C5\": new utils.Interface(NFT),\n\t\t\"0x3aD026833277eA79270fD8FA0Be397100118EE5b\": new utils.Interface(GEN),\n\t\t\"0xb61E4E1B89cd9ec6282337e702929480b2E8f569\": new utils.Interface(\n\t\t\tConfig\n\t\t),\n\t\tNFT: new utils.Interface(NFT),\n\t\tGEN: new utils.Interface(GEN),\n\t\tConfig: new utils.Interface(Config),\n\t};\n\n\tconst getContractABI = (contractAddress) => {\n\t\tconst contractName = Object.keys(contractsList).find(\n\t\t\t(x) => contractsList[x] === contractAddress\n\t\t);\n\t\treturn contractName && contractABIs[contractName];\n\t};\n\n\tconst getABIByAddress = (tokenAddress) => {\n\t\treturn (\n\t\t\t(typeof tokenAddress === \"string\" &&\n\t\t\t\tObject.entries(contractABIs).find(([x, y]) =>\n\t\t\t\t\tx.toLowerCase().includes(tokenAddress.toLowerCase())\n\t\t\t\t)?.[1]) ||\n\t\t\tObject.values(contractABIs)?.[0]\n\t\t);\n\t};\n\n\tconst getFormattedETH = (x) => {\n\t\tif (typeof x === \"object\") {\n\t\t\treturn (Object.keys(x).includes(\"_hex\") && formatEther(x)) || 0;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tconst getFormattedETHs = (...args) => {\n\t\treturn args.map((x) => (!!x && getFormattedETH(x)) || 0);\n\t};\n\n\tconst flattenItem = (val, dec) => {\n\t\tif (typeof val === \"object\" && Object.keys(val)?.[0] === \"_hex\") {\n\t\t\treturn Number(utils.formatUnits(BigInt(val._hex).toString(), dec));\n\t\t}\n\t\tif (typeof val === \"string\" || typeof val === \"boolean\") {\n\t\t\treturn val;\n\t\t}\n\t\tif (typeof val === \"object\" && typeof val?.length === \"number\") {\n\t\t\treturn [\n\t\t\t\t...val.map((x) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof x === \"object\" &&\n\t\t\t\t\t\tObject.keys(x)?.[0] === \"_hex\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn Number(\n\t\t\t\t\t\t\tutils.formatUnits(BigInt(x._hex).toString(), dec)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof x === \"string\") {\n\t\t\t\t\t\treturn x;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t];\n\t\t}\n\t};\n\n\tconst flattenResults = (results, keepError = true, decimals = 18) => {\n\t\tconst resultsFlattened = {};\n\t\tconst resKeys = Object.keys(results);\n\t\tObject.values(results).forEach((x, i) => {\n\t\t\tif (typeof x === \"object\" && typeof x?.length === \"number\") {\n\t\t\t\tresultsFlattened[resKeys[i]] = flattenItem(x[0], decimals);\n\t\t\t} else {\n\t\t\t\tif (keepError) resultsFlattened[resKeys[i]] = x;\n\t\t\t}\n\t\t});\n\t\treturn resultsFlattened;\n\t};\n\n\tconst useContractMethod = (contractAddress, method, args) => {\n\t\tconst abi = getABIByAddress(contractAddress);\n\t\tif (![contractAddress, abi, method].every((x) => !!x)) return 0;\n\n\t\tconst { error, value } = useCall({\n\t\t\tcontract: new Contract(contractAddress, abi),\n\t\t\tmethod,\n\t\t\targs,\n\t\t}) ?? { error: null, value: null };\n\t\treturn (value && value?.[0]) || 0;\n\t};\n\n\tconst useContractMethods = (\n\t\tcallsArr,\n\t\t{ keepError, dec, refresh = \"everyBlock\" }\n\t) => {\n\t\tconst callsArg = callsArr.map((call, idx) => {\n\t\t\tconst { contractAddress, method, args } = call;\n\t\t\tconst abi = getABIByAddress(contractAddress);\n\t\t\tif (![contractAddress, abi, method].every((x) => !!x)) {\n\t\t\t\treturn { method: method || `NO_METHOD${idx}` };\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tcontract: new Contract(contractAddress, abi),\n\t\t\t\tmethod,\n\t\t\t\targs,\n\t\t\t};\n\t\t});\n\n\t\tconst callsFinal = callsArg.filter(\n\t\t\t(x) => typeof x.args?.length === \"number\"\n\t\t);\n\t\t// console.log(callsFinal);\n\t\tconst values = {};\n\t\tconst results = useCalls(callsFinal, { refresh });\n\t\t// console.log(results);\n\t\tresults &&\n\t\t\tresults.forEach((result, idx) => {\n\t\t\t\tif (result && !result.error)\n\t\t\t\t\tvalues[callsFinal[idx].method] = result.value;\n\t\t\t});\n\t\tcallsArg.forEach((call, idx) => {\n\t\t\tif (\n\t\t\t\tcall &&\n\t\t\t\ttypeof call.args?.length === \"number\" &&\n\t\t\t\tvalues[call.method] !== undefined\n\t\t\t)\n\t\t\t\treturn;\n\t\t\t// values[call.method] = `call to method ${call.method} failed.`;\n\t\t\tvalues[call.method] = null;\n\t\t});\n\t\treturn flattenResults(values, keepError, dec);\n\t};\n\n\tconst useContractMutation = (contractAddress, method) => {\n\t\tconst contract = new Contract(\n\t\t\tcontractAddress,\n\t\t\tgetABIByAddress(contractAddress)\n\t\t);\n\t\tconst { state, send } = useContractFunction(contract, method, {\n\t\t\ttransactionName: method,\n\t\t});\n\n\t\treturn { state, send };\n\t};\n\n\tconst bgImages = {\n\t\tMintPage: \"bg6.jpg\",\n\t\tStory: \"bg1.jpg\",\n\t\tGallery: \"bg4.jpg\",\n\t\tFAQ: \"bg8.jpg\",\n\t\tHistory: \"bg7.jpg\",\n\t\troyalDiamonds: \"bg5.jpg\",\n\t};\n\n\tconst CacheBgsNew = () => {\n\t\tObject.values(bgImages).forEach(\n\t\t\t(x) => (new Image().src = `config/images/${x}`)\n\t\t);\n\t};\n\n\tconst CacheBgs = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{Object.values(bgImages).map((x) => {\n\t\t\t\t\tconst currSrc = `config/images/${x}`;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tkey={currSrc}\n\t\t\t\t\t\t\tsrc={`config/images/${x}`}\n\t\t\t\t\t\t\tstyle={{ display: \"inline\", maxWidth: \"0px\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</>\n\t\t);\n\t};\n\n\tconst fileExt = \"jpg\";\n\tconst metadata = {\n\t\t1: {\n\t\t\trarity: \"Mythical (1%)\",\n\t\t\tcaste: \"Wraiths\",\n\t\t\tabilities: \"Control Of The Elements\",\n\t\t\trewardMultiplier: \"20x\",\n\t\t},\n\t\t2: {\n\t\t\trarity: \"Legendary (2%)\",\n\t\t\tcaste: \"Lightning Weavers\",\n\t\t\tabilities: \"Lightning Storms\",\n\t\t\trewardMultiplier: \"10x\",\n\t\t},\n\t\t3: {\n\t\t\trarity: \"Rare (5%)\",\n\t\t\tcaste: \"Fire Demons\",\n\t\t\tabilities: \"Ancient Fire Dragons\",\n\t\t\trewardMultiplier: \"5x\",\n\t\t},\n\t\t4: {\n\t\t\trarity: \"Uncommon (12%)\",\n\t\t\tcaste: \"Water Beings\",\n\t\t\tabilities: \"Engulfing Tsunamis\",\n\t\t\trewardMultiplier: \"2x\",\n\t\t},\n\t\t5: {\n\t\t\trarity: \"Common (80%)\",\n\t\t\tcaste: \"Dark Witches\",\n\t\t\tabilities: \"Dark Spell Casting\",\n\t\t\trewardMultiplier: \"1x\",\n\t\t},\n\t};\n\n\tconst footerIconSize = 36;\n\n\tconst value = {\n\t\tconfig: CONFIG,\n\t\tblockchain,\n\t\tdata,\n\t\tconnect,\n\t\tdispatch,\n\t\tbgImages,\n\t\tfooterIconSize,\n\t\tfileExt,\n\t\tmetadata,\n\t\tCacheBgs,\n\t\tCacheBgsNew,\n\t\tuseContractMethod,\n\t\tuseContractMethods,\n\t\tcontractABIs,\n\t\tcontractsList,\n\t\tsetContractsList,\n\t\tuseContractMutation,\n\t\tgetFormattedETH,\n\t\tgetFormattedETHs,\n\t\taccount,\n\t\tchainId,\n\t\tswitchNetwork,\n\t\tdeactivate,\n\t\tactivateBrowserWallet,\n\t\tconfigObj,\n\t\thandleConnection,\n\t\tconnectionStatus,\n\t\twalletAddress,\n\t\tsetAddress,\n\t\tauthPass,\n\t\tpw,\n\t\tsetPw,\n\t\tauthed,\n\t\tsetAuthed,\n\t\tuseContractConfig,\n\t\tclaimingNft,\n\t\tsetClaimingNft,\n\t\tfeedback,\n\t\tsetFeedback,\n\t\ttokens,\n\t\tsetTokens,\n\t\tbrd,\n\t\tsetbrd,\n\t\tbxsh,\n\t\tsetbxsh,\n\t\tDOT,\n\t\tsetDOT,\n\t\ttype,\n\t\tsetType,\n\t\tplacement,\n\t\tsetPlacement,\n\t\tcurrPage,\n\t\tsetCurrPage,\n\t\terrmessage,\n\t\ttxmessage,\n\t\tmntmessage,\n\t\tgetCost,\n\t\tclaimNFTs,\n\t\tdecrementtokens,\n\t\tincrementtokens,\n\t\tgetData,\n\t};\n\n\treturn <AppContext.Provider {...{ value }}>{children}</AppContext.Provider>;\n};\n\n// export const useConfig = () => {\n\n// \tconst context = useContext(AppContext);\n// \tconsole.log(context)\n// \tconst {config} = context;\n// \treturn config;\n\n// }\n\nexport const useAppContext = () => {\n\treturn useContext(AppContext);\n};\n","import { useAppContext } from \"../context/AppContext\";\nimport * as s from \"../styles/globalStyles\";\nimport { Badge } from \"rsuite\";\nimport { GoDotFill } from \"react-icons/go\";\n\nconst ConnectButton = () => {\n\tconst { account, handleConnection, connectionStatus } = useAppContext();\n\n\tconst conStatus = connectionStatus();\n\tconst buttonColor = `${\n\t\tconStatus == 1 ? \"#32F714FF\" : conStatus == 0 ? \"orange\" : \"red\"\n\t}`;\n\tconst wbStyle = { borderColor: buttonColor };\n\tconst getDisplayAddress = () => {\n\t\treturn conStatus == 1\n\t\t\t? account.substring(0, 6) + \"...\" + account.substring(38, 42)\n\t\t\t: conStatus == 0\n\t\t\t? \"Change Network\"\n\t\t\t: \"Connect Wallet\";\n\t};\n\n\treturn (\n\t\t<s.WalletBox style={wbStyle} onClick={() => handleConnection()}>\n\t\t\t<s.connectionIndicator>\n\t\t\t\t<GoDotFill size={\"1.2rem\"} color={buttonColor} />\n\t\t\t</s.connectionIndicator>\n\t\t\t<s.TextSubTitle\n\t\t\t\tstyle={{\n\t\t\t\t\tfontSize: \"clamp(1.2rem, 2vw, 1.8rem)\",\n\t\t\t\t\tcolor: \"white\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{getDisplayAddress()}\n\t\t\t</s.TextSubTitle>\n\t\t</s.WalletBox>\n\t);\n};\n\nexport const HeaderContainer = () => {\n\tconst { setCurrPage } = useAppContext();\n\n\t// const {blockchain, DOT, walletAddress, config, setCurrPage} = useAppContext();\n\t// const wbStyle = walletAddress.includes('0x') && {borderColor: '#32F714FF'} || {}\n\treturn (\n\t\t<s.ResponsiveWrapperHeader style={{ marginBottom: \"3rem\" }}>\n\t\t\t<s.LogoDiv>\n\t\t\t\t<s.StyledLogo\n\t\t\t\t\talt={\"logo\"}\n\t\t\t\t\tsrc={\"/config/images/logo.jpg\"}\n\t\t\t\t\tstyle={{ borderRadius: \"50%\", opacity: \"0.8\" }}\n\t\t\t\t/>\n\t\t\t\t{/* \n          <a href=\"#\" target={\"_blank\"}>\n            <s.StyledLogo alt={\"logo\"} src={\"/config/images/logo-main.png\"} />\n          </a> */}\n\t\t\t</s.LogoDiv>\n\n\t\t\t<s.Headerlinks>\n\t\t\t\t<s.StyledLink onClick={() => setCurrPage(\"Story\")}>\n\t\t\t\t\tThe Mycelians Have Arisen\n\t\t\t\t</s.StyledLink>\n\n\t\t\t\t<s.StyledLink onClick={() => setCurrPage(\"History\")}>\n\t\t\t\t\tThe Recovered Archives\n\t\t\t\t</s.StyledLink>\n\n\t\t\t\t<s.StyledLink onClick={() => setCurrPage(\"MintPage\")}>\n\t\t\t\t\tReactivate a Gen 1 Mycelian\n\t\t\t\t</s.StyledLink>\n\n\t\t\t\t<s.StyledLink onClick={() => setCurrPage(\"FAQ\")}>\n\t\t\t\t\tThe Core $MELT Token\n\t\t\t\t</s.StyledLink>\n\n\t\t\t\t<s.StyledLink\n\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\tonClick={() => setCurrPage(\"Gallery\")}\n\t\t\t\t>\n\t\t\t\t\tThe Order\n\t\t\t\t</s.StyledLink>\n\n\t\t\t\t<s.StyledLink\n\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\tonClick={() => setCurrPage(\"royalDiamonds\")}\n\t\t\t\t>\n\t\t\t\t\tThe Sacred $MELT Token\n\t\t\t\t</s.StyledLink>\n\t\t\t</s.Headerlinks>\n\n\t\t\t<s.HeaderDiv>\n\t\t\t\t<ConnectButton />\n\t\t\t\t{/* <s.WalletBox style={wbStyle}>\n            {blockchain.account !== \"\" ? (\n            <>\n            <s.TextSubTitle style={{fontSize: \"clamp(1.2rem, 2vw, 1.8rem)\", color: \"white\"}}>\n            <Badge color={DOT}/> {walletAddress}\n              </s.TextSubTitle>\n            </>\n            ) : null }\n          </s.WalletBox> */}\n\t\t\t</s.HeaderDiv>\n\t\t</s.ResponsiveWrapperHeader>\n\t);\n};\n","import * as s from \"../styles/globalStyles\";\n\nimport { BigNumber, utils } from \"ethers\";\nimport { useAppContext } from \"../context/AppContext\";\nimport { useState } from \"react\";\nimport { useConfig, useEtherBalance } from \"@usedapp/core\";\n\nexport const MintDataView = () => {\n\tconst web3Config = useConfig();\n\tconst nativeCurrencySymbol =\n\t\tweb3Config.networks[0].nativeCurrency.symbol || \"ETH\";\n\tconst {\n\t\tconfig,\n\t\tuseContractMethods,\n\t\taccount,\n\t\tconnectionStatus,\n\t\tuseContractMutation,\n\t\tgetFormattedETH,\n\t\tcontractsList,\n\t} = useAppContext();\n\tconst [amount, setAmount] = useState(\"\");\n\tconst [pword, setPword] = useState(\"\");\n\tconst { NFT: NFTContractAddress, GEN: GenContractAddress } = contractsList;\n\t// const meta = (typeof pword === 'bigint') && BigNumber.from(BigInt(utils.solidityKeccak256(['uint256'], [pword]), 16))\n\n\tconst mutationObject = useContractMutation(NFTContractAddress, \"mint\");\n\n\tconst {\n\t\tstate: { status: mintStatus },\n\t\tsend: mintSend,\n\t\tevents: mintEvents,\n\t} = mutationObject;\n\n\tconst calls = [\n\t\t{\n\t\t\tcontractAddress: NFTContractAddress,\n\t\t\tmethod: \"balanceOf\",\n\t\t\targs: [account],\n\t\t},\n\t\t{\n\t\t\tcontractAddress: NFTContractAddress,\n\t\t\tmethod: \"totalSupply\",\n\t\t\targs: [],\n\t\t},\n\t\t{ contractAddress: NFTContractAddress, method: \"maxSupply\", args: [] },\n\t\t{ contractAddress: NFTContractAddress, method: \"cost\", args: [] },\n\t\t{ contractAddress: NFTContractAddress, method: \"WLcost\", args: [] },\n\t\t{\n\t\t\tcontractAddress: GenContractAddress,\n\t\t\tmethod: \"verifyCh\",\n\t\t\targs: [BigNumber.from(pword || BigInt(0))],\n\t\t},\n\t];\n\n\tconst values =\n\t\tNFTContractAddress &&\n\t\tGenContractAddress &&\n\t\tuseContractMethods(calls, { keepError: true, dec: 0 });\n\t// console.log(values);\n\tconst {\n\t\tbalanceOf,\n\t\ttotalSupply,\n\t\tmaxSupply,\n\t\tcost: rawCost,\n\t\tWLcost: rawWLcost,\n\t\tverifyCh,\n\t} = values;\n\tconst cost =\n\t\ttypeof rawCost === \"number\" && utils.formatUnits(BigInt(rawCost), 18);\n\tconst WLcost =\n\t\ttypeof rawWLcost === \"number\" &&\n\t\tutils.formatUnits(BigInt(rawWLcost), 18);\n\tconst realCost = (verifyCh && WLcost) || cost;\n\tconst saleColor = verifyCh ? \"green\" : \"red\";\n\tconst handleChange = (e) => {\n\t\tconst val = e.target.value;\n\t\tconst strVal = parseInt(val)?.toString();\n\t\tif (val === \"\" || val === \"0\") {\n\t\t\tsetAmount(0);\n\t\t\treturn;\n\t\t}\n\t\t(strVal === val || strVal === val.substring(1)) &&\n\t\t\tsetAmount(\n\t\t\t\tMath.max(0, Math.min(Number(val), maxSupply - totalSupply))\n\t\t\t);\n\t};\n\n\tconst handlePassChange = (e) => {\n\t\tconst val = e.target.value;\n\t\tlet newVal;\n\t\ttry {\n\t\t\tnewVal = BigInt(val);\n\t\t} catch (e) {\n\t\t\t1;\n\t\t}\n\t\tnewVal && newVal !== pword && setPword(newVal);\n\t\tif (val === \"\" || val === \"0\") setPword(BigInt(0));\n\t};\n\n\tconst mintCost = utils.parseEther((amount * realCost).toFixed(6));\n\tconst ethBalance = useEtherBalance(account);\n\tconst notConnected = connectionStatus() < 1 || !account;\n\tconst insufficientBalance =\n\t\tBigInt(mintCost || 0) >= BigInt(ethBalance || 0);\n\tconst noneSelected = amount && amount === 0;\n\tconst txPending =\n\t\tmintStatus === \"Pending signature\" || mintStatus === \"Mining\";\n\tconst sigPending = mintStatus === \"PendingSignature\";\n\tconst mintSuccessful = mintStatus === \"Success\";\n\tconst txError = mintStatus === \"Exception\";\n\tconst showTooltip = () => mintDisabled() || mintSuccessful || txError;\n\n\tconst mintDisabled = () => {\n\t\treturn (\n\t\t\tnotConnected ||\n\t\t\tinsufficientBalance ||\n\t\t\tnoneSelected ||\n\t\t\ttxPending ||\n\t\t\tsigPending\n\t\t);\n\t};\n\n\t// console.log(getFormattedETH(mintCost), getFormattedETH(ethBalance))\n\tconst handleClick = () => {\n\t\tif (connectionStatus() !== 1) return;\n\t\ttry {\n\t\t\t// console.log(account, amount, pword || 0, { value: mintCost });\n\t\t\tmintSend(account, amount, pword || 0, { value: mintCost });\n\t\t} catch (e) {\n\t\t\tconsole.log(mintStatus);\n\t\t}\n\t};\n\n\treturn (\n\t\t<s.ResponsiveWrapperTraits>\n\t\t\t<s.ResponsiveWrapperTrait>\n\t\t\t\t<s.TextO>Your Squad Size</s.TextO>\n\t\t\t\t<s.TextO key={balanceOf}>{balanceOf}</s.TextO>\n\t\t\t</s.ResponsiveWrapperTrait>\n\t\t\t<s.ResponsiveWrapperTrait>\n\t\t\t\t<s.TextO>Mycelians Reactivated</s.TextO>\n\t\t\t\t<s.TextO key={totalSupply}>{totalSupply}</s.TextO>\n\t\t\t</s.ResponsiveWrapperTrait>\n\t\t\t<s.ResponsiveWrapperTrait>\n\t\t\t\t<s.TextO>Mycelians Left</s.TextO>\n\t\t\t\t<s.TextO key={maxSupply}>{maxSupply - totalSupply}</s.TextO>\n\t\t\t</s.ResponsiveWrapperTrait>\n\t\t\t<s.ResponsiveWrapperTrait>\n\t\t\t\t<s.TextO style={{ color: saleColor }}>\n\t\t\t\t\tReactivation cost\n\t\t\t\t</s.TextO>\n\t\t\t\t<s.TextO key={realCost} style={{ color: saleColor }}>\n\t\t\t\t\t{Number(realCost).toFixed(2)} {nativeCurrencySymbol}\n\t\t\t\t</s.TextO>\n\t\t\t</s.ResponsiveWrapperTrait>\n\t\t\t<s.ResponsiveWrapperTrait>\n\t\t\t\t<s.TextO>Mycelians to Reactivate:</s.TextO>\n\t\t\t\t<s.TextO\n\t\t\t\t\tstyle={{ display: \"flex\", maxWidth: \"100%\", width: \"100%\" }}\n\t\t\t\t>\n\t\t\t\t\t<s.InputO\n\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\tonChange={(e) => handleChange(e)}\n\t\t\t\t\t\tdisabled={mintDisabled()}\n\t\t\t\t\t/>\n\t\t\t\t</s.TextO>\n\t\t\t</s.ResponsiveWrapperTrait>\n\t\t\t<s.ResponsiveWrapperTrait>\n\t\t\t\t<s.TextO style={{ color: saleColor }}>\n\t\t\t\t\tMELT Cypher (optional):\n\t\t\t\t</s.TextO>\n\t\t\t\t<s.TextO\n\t\t\t\t\tstyle={{ display: \"flex\", maxWidth: \"100%\", width: \"100%\" }}\n\t\t\t\t>\n\t\t\t\t\t<s.InputO\n\t\t\t\t\t\tborderColor={saleColor}\n\t\t\t\t\t\tvalue={pword.toString()}\n\t\t\t\t\t\tonChange={(e) => handlePassChange(e)}\n\t\t\t\t\t\tstyle={{ color: saleColor }}\n\t\t\t\t\t\tdisabled={mintDisabled()}\n\t\t\t\t\t/>\n\t\t\t\t</s.TextO>\n\t\t\t</s.ResponsiveWrapperTrait>\n\t\t\t<s.ResponsiveWrapperTrait style={{ marginTop: \"2rem\" }}>\n\t\t\t\t<s.MintBtn onClick={handleClick} disabled={mintDisabled()}>\n\t\t\t\t\tReactivate {amount} Mycelians Now{\" \"}\n\t\t\t\t\t{`(${(amount * realCost).toFixed(\n\t\t\t\t\t\t5\n\t\t\t\t\t)} ${nativeCurrencySymbol})`}\n\t\t\t\t</s.MintBtn>\n\t\t\t</s.ResponsiveWrapperTrait>\n\t\t\t{showTooltip() && (\n\t\t\t\t<s.ResponsiveWrapperTrait>\n\t\t\t\t\t<s.TextO\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontSize: \"clamp(1rem, 2vw, 1.5rem)\",\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\tcolor: mintSuccessful\n\t\t\t\t\t\t\t\t? \"green\"\n\t\t\t\t\t\t\t\t: txPending || sigPending\n\t\t\t\t\t\t\t\t? \"orange\"\n\t\t\t\t\t\t\t\t: \"red\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{(notConnected &&\n\t\t\t\t\t\t\t\"Unable to mint: not connected. Please connect your wallet first.\") ||\n\t\t\t\t\t\t\t(insufficientBalance &&\n\t\t\t\t\t\t\t\t`Unable to mint: insufficient balance (${Number(\n\t\t\t\t\t\t\t\t\tgetFormattedETH(ethBalance)\n\t\t\t\t\t\t\t\t).toFixed(5)} ${nativeCurrencySymbol})`) ||\n\t\t\t\t\t\t\t(noneSelected &&\n\t\t\t\t\t\t\t\t\"Unable to mint: no Mycelians chosen\") ||\n\t\t\t\t\t\t\t(txError &&\n\t\t\t\t\t\t\t\t\"Unable to mint: an error has occurred. Please try again.\") ||\n\t\t\t\t\t\t\t(txPending &&\n\t\t\t\t\t\t\t\t\"Reactivation in progress, please wait...\") ||\n\t\t\t\t\t\t\t(sigPending &&\n\t\t\t\t\t\t\t\t\"Reactivation about to start, please confirm the transaction...\") ||\n\t\t\t\t\t\t\t(mintSuccessful &&\n\t\t\t\t\t\t\t\t\"Reactivation successul. Good luck Commander.\")}\n\t\t\t\t\t</s.TextO>\n\t\t\t\t</s.ResponsiveWrapperTrait>\n\t\t\t)}\n\t\t</s.ResponsiveWrapperTraits>\n\t);\n};\n","import { useEffect, useState } from \"react\";\nimport { useAppContext } from \"../context/AppContext\";\nimport * as s from \"../styles/globalStyles\";\nimport { MintDataView } from \"./MintDataView\";\n\nexport const MintArea = () => {\n\tconst { fileExt, metadata } = useAppContext();\n\tconst numImages = 99;\n\tconst [currChar, setCurrChar] = useState(1);\n\tconst currImg = `/config/images/${currChar}.${fileExt}`;\n\tconst selectionFn = (x) => Math.min(numImages, (x % numImages) + 1);\n\tconst randomFn = (x) => 1 + parseInt(Math.random() * numImages);\n\n\tuseEffect(() => {\n\t\tconst intervalId = setInterval(() => {\n\t\t\tsetCurrChar((x) => randomFn(x));\n\t\t}, 2000);\n\t\treturn () => clearInterval(intervalId);\n\t}, []);\n\n\treturn (\n\t\t<s.ResponsiveWrapper\n\t\t\tflex={1}\n\t\t\tstyle={{ padding: 24, ...s.opaqueBgStyles }}\n\t\t>\n\t\t\t{[...Array(numImages).keys()]\n\t\t\t\t.map((x) => x + 1)\n\t\t\t\t.map((x, i) => {\n\t\t\t\t\tconst tempImg = `/config/images/${i + 1}.${fileExt}`;\n\t\t\t\t\tconst styleObj = (tempImg === currImg && {\n\t\t\t\t\t\topacity: \"1\",\n\t\t\t\t\t}) || { display: \"none\" };\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<s.StyledImgMain\n\t\t\t\t\t\t\tkey={tempImg}\n\t\t\t\t\t\t\tsrc={tempImg}\n\t\t\t\t\t\t\ttype=\"image/jpg\"\n\t\t\t\t\t\t\tstyle={styleObj}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t{/* <s.StyledImgMain controls src=\"/config/images/force.jpg\"/> */}\n\t\t\t{/* <s.SpacerSmall/> */}\n\t\t\t<MintDataView />\n\t\t\t{/* <s.SpacerLarge /> */}\n\t\t</s.ResponsiveWrapper>\n\t);\n};\n\n/*\nalright so mint is dynamic with a hard cap of 10,000 units. total MELT supply is 1m tokens, 500k for mint airdrop 500k for LP.\nif only 500 get minted, you get 1k tokens per mint. mint costs 750k pls, discounted to 500k if you have the password. say everyone has the pw and we mint 2.5k pieces, that's $45k. 25% goes into the LP, 25% is used to buy atropa and airdrop to minters. we keep 22.5k. starting mcap is then $22.5k, and everyone gets 200 tokens per mint, which is $9 so they start at 50% ROI pre launch\n*/\n","import { useAppContext } from \"../context/AppContext\";\nimport * as s from \"../styles/globalStyles\";\n\nexport const TitleContainer = () => {\n\tconst { config } = useAppContext();\n\n\treturn (\n\t\t<s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n\t\t\t<s.TextTitle style={s.opaqueBgStyles}>\n\t\t\t\tReactivate your {config.NFT_NAME} Squad.\n\t\t\t\t<br />\n\t\t\t\tHold back the scourge. Fight for our future.\n\t\t\t\t<br />\n\t\t\t\tUnlock riches beyond your imagination.\n\t\t\t\t<br />\n\t\t\t</s.TextTitle>\n\t\t</s.Container>\n\t);\n};\n","import { useAppContext } from \"../context/AppContext\";\nimport * as s from \"../styles/globalStyles\";\n\nexport const StorySection = () => {\n\tconst { config } = useAppContext();\n\tconst tempImg = `/config/images/${\"banner\"}.${\"png\"}`;\n\n\treturn (\n\t\t<s.SecContainer\n\t\t\tid=\"story\"\n\t\t\tstyle={{\n\t\t\t\t// background: `url(${tempImg})`,\n\t\t\t\t// backgroundRepeat: \"no-repeat\",\n\t\t\t\t// backgroundSize: \"cover\",\n\t\t\t\t...s.opaqueBgStyles,\n\t\t\t\t// opacity: \"1\",\n\t\t\t}}\n\t\t>\n\t\t\t{/* <s.StyledImgMain\n\t\t\t\tkey={tempImg}\n\t\t\t\tsrc={tempImg}\n\t\t\t\ttype=\"image/jpg\"\n\t\t\t\tstyle={{ width: \"70%\", opacity: 0.9 }}\n\t\t\t/> */}\n\n\t\t\t<s.SpacerMedium />\n\t\t\t<s.TextTitle>\n\t\t\t\t{\" \"}\n\t\t\t\tWelcome to the immersive world of the {config.NFT_NAME}\n\t\t\t</s.TextTitle>\n\t\t\t<s.SpacerLarge />\n\t\t\t<s.TextB>\n\t\t\t\tStep into the future where technology and nature converge in a\n\t\t\t\ttale of intrigue, innovation, and ecological awakening.\n\t\t\t\t<br></br>\n\t\t\t</s.TextB>\n\t\t\t<s.SpacerLarge />\n\t\t\t<s.TextB>\n\t\t\t\tIn this captivating adventure, you'll explore the boundless\n\t\t\t\tpossibilities of a world where cybernetic beings, known as\n\t\t\t\tSynths, walk among us, coexisting with humans. But beneath the\n\t\t\t\tsurface of this utopia lies a silent threat—an ancient and\n\t\t\t\tintelligent force that seeks to seize control. The mycelium, an\n\t\t\t\tinterconnected web of fungal threads, holds secrets that could\n\t\t\t\treshape the destiny of our planet.\n\t\t\t\t<br></br>\n\t\t\t</s.TextB>\n\t\t\t<s.SpacerLarge />\n\t\t</s.SecContainer>\n\t);\n};\n","import { useEffect, useState } from 'react';\nimport {useAppContext} from '../context/AppContext';\nimport * as s from \"../styles/globalStyles\";\n\nexport const CarouselSection = () => {\n    \n  const {fileExt, metadata} = useAppContext();\n\n  const [currChar, setCurrChar] = useState(1);\n  const currMetadata = metadata[currChar];\n  const currImg = `/config/images/${currChar}.${fileExt}`\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrChar(x => x % 25 + 1);\n    }, 2000);\n    return () => clearInterval(intervalId); \n  }, [])\n\n\n  return (\n\t\t\t<s.SecContainer id=\"sneak\">\n            <s.TextTitle style={s.opaqueBgStyles}>\n              Choose your caste. <br/>\n              Become a force to be reckoned with.\n            </s.TextTitle>\n\n           <s.ResponsiveWrapper flex={1} style={{ padding: '2rem' , maxHeight: '50vmax' }} test>\n              {/*<s.SpacerLarge/>*/}\n              {Object.keys(metadata).map((x,i) => {\n                const tempImg = `/config/images/${i+1}.${fileExt}`\n                const styleObj = tempImg === currImg && {} || {display: 'none'}\n                return (<s.StyledImgMain key={tempImg} src={tempImg} type=\"image/jpg\" style={styleObj}/>)\n              })}\n              {/*<s.StyledImgMain key={currImg} src={currImg} type=\"image/jpg\"/>*/}\n              <s.ResponsiveWrapperTraits>\n                <s.ResponsiveWrapperTrait>\n                  <s.TextO>Caste</s.TextO>\n                  <s.TextO key={currMetadata.caste}>{currMetadata.caste}</s.TextO>\n                </s.ResponsiveWrapperTrait>\n                <s.ResponsiveWrapperTrait>\n                  <s.TextO>Rarity</s.TextO>\n                  <s.TextO key={currMetadata.rarity}>{currMetadata.rarity}</s.TextO>                  \n                </s.ResponsiveWrapperTrait>\n                <s.ResponsiveWrapperTrait>\n                  <s.TextO>Main ability</s.TextO>\n                  <s.TextO key={currMetadata.abilities}>{currMetadata.abilities}</s.TextO>                  \n                </s.ResponsiveWrapperTrait>\n                <s.ResponsiveWrapperTrait>\n                  <s.TextO>Diamond Claim Multiplier</s.TextO>\n                  <s.TextO key={currMetadata.rewardMultiplier}>{currMetadata.rewardMultiplier}</s.TextO>                  \n                </s.ResponsiveWrapperTrait>\n              </s.ResponsiveWrapperTraits>\n            </s.ResponsiveWrapper>\n      </s.SecContainer>\n)\n  }\n","import { useConfig } from \"@usedapp/core\";\nimport { useAppContext } from \"../context/AppContext\";\nimport * as s from \"../styles/globalStyles\";\nimport { Panel, PanelGroup } from \"rsuite\";\n\nexport const FAQSection = () => {\n\tconst web3Config = useConfig();\n\tconst nativeCurrencySymbol =\n\t\tweb3Config.networks[0].nativeCurrency.symbol || \"ETH\";\n\n\tconst { setCurrPage, useContractMethods, contractsList, getFormattedETHs } =\n\t\tuseAppContext();\n\n\tconst { NFT: NFTContractAddress, GEN: GenContractAddress } = contractsList;\n\n\tconst calls = [\n\t\t{ contractAddress: NFTContractAddress, method: \"maxSupply\", args: [] },\n\t\t{ contractAddress: NFTContractAddress, method: \"cost\", args: [] },\n\t\t{ contractAddress: NFTContractAddress, method: \"WLcost\", args: [] },\n\t];\n\n\tconst values =\n\t\tNFTContractAddress &&\n\t\tGenContractAddress &&\n\t\tuseContractMethods(calls, { keepError: true, dec: 0, refresh: 20 });\n\n\tconst {\n\t\tmaxSupply = 1000,\n\t\tcost: rawCost = 0,\n\t\tWLcost: rawWLcost = 0,\n\t} = values;\n\tconst cost = rawCost / 10 ** 18 || 0;\n\tconst WLCost = rawWLcost / 10 ** 18 || 0;\n\t// const { caste, mult } = { caste: \"\", mult: \"\" };\n\treturn (\n\t\t<s.SecContainer id=\"faq\">\n\t\t\t<s.TextTitle style={s.opaqueBgStyles}>\n\t\t\t\tAt the center of it all lies the MELT token\n\t\t\t\t<br /> powered by the ATROPA ecosystem\n\t\t\t</s.TextTitle>\n\t\t\t<s.SpacerLarge />\n\t\t\t{/* <TokenView /> */}\n\n\t\t\t{true && (\n\t\t\t\t<PanelGroup\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: \"80%\",\n\t\t\t\t\t\tborderColor: \"#e10f96\",\n\t\t\t\t\t\tcolor: \"steelblue\",\n\t\t\t\t\t\tmarginBottom: \"30px\",\n\t\t\t\t\t}}\n\t\t\t\t\taccordion\n\t\t\t\t\tbordered\n\t\t\t\t>\n\t\t\t\t\t<Panel\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tfontFamily: \"RoadRage\",\n\t\t\t\t\t\t\tcolor: \"#0059E50\",\n\t\t\t\t\t\t\tfontSize: \"1rem\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\theader=\"What are the Mycelians?\"\n\t\t\t\t\t\tdefaultExpanded\n\t\t\t\t\t>\n\t\t\t\t\t\t<s.TextP style={{ textAlign: \"left\" }}>\n\t\t\t\t\t\t\tThe Mycelians is a post apocalyptic story driven\n\t\t\t\t\t\t\tecosystem that revolves around the Mycelians NFT\n\t\t\t\t\t\t\tcollection, which represents powerful synthetic\n\t\t\t\t\t\t\tfemale robots known as the Mycelians.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tAs the Mycelians have been taken over by the\n\t\t\t\t\t\t\tMycelium scourge, each commander must \"reactivate\"\n\t\t\t\t\t\t\tthem, a process by which they are reprogrammed back\n\t\t\t\t\t\t\tunder your command.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tThe bigger your squad of mycelians the better your\n\t\t\t\t\t\t\todds of success as the story evolves.\n\t\t\t\t\t\t</s.TextP>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel\n\t\t\t\t\t\tstyle={{ fontFamily: \"RoadRage\", color: \"#050F3880\" }}\n\t\t\t\t\t\theader=\"What are the different rarity tiers of the Mycelians?\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<s.TextP style={{ textAlign: \"left\" }}>\n\t\t\t\t\t\t\tEach generation of Mycelians is divided into 10\n\t\t\t\t\t\t\tdifferent categories that follow different rarity\n\t\t\t\t\t\t\ttiers. The simple drones are the most common ones,\n\t\t\t\t\t\t\twhile the hive chieftains are legendary and very\n\t\t\t\t\t\t\thard to find.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tThe rarer a reactivated Mycelian is, the more\n\t\t\t\t\t\t\tbenefits her commander is awarded.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tYou can view the different categories on the\n\t\t\t\t\t\t\t<s.StyledLink\n\t\t\t\t\t\t\t\tonClick={() => setCurrPage(\"Gallery\")}\n\t\t\t\t\t\t\t\tstyle={{ margin: \"0 0.2rem\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\"The Order\"\n\t\t\t\t\t\t\t</s.StyledLink>{\" \"}\n\t\t\t\t\t\t\tpage.\n\t\t\t\t\t\t</s.TextP>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel\n\t\t\t\t\t\tstyle={{ fontFamily: \"RoadRage\", color: \"#050F3880\" }}\n\t\t\t\t\t\theader=\"What are the benefits of reactivating a Mycelian?\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<s.TextP style={{ textAlign: \"left\" }}>\n\t\t\t\t\t\t\tAmong their many qualities, the Mycelians are very\n\t\t\t\t\t\t\twell known for being excellent engineers, and can\n\t\t\t\t\t\t\twork together in large hive-like teams to generate\n\t\t\t\t\t\t\tnew advanced tokens.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tOnce all mycelians of a certain generation have been\n\t\t\t\t\t\t\treactivated (minted), a portion of the total\n\t\t\t\t\t\t\treactivation cost will be used to fuel the growth\n\t\t\t\t\t\t\tengine (liquidity pool) of a unique token they will\n\t\t\t\t\t\t\tcreate. and any commander who has reactivated a\n\t\t\t\t\t\t\tmycelian will be allowed to participate in the\n\t\t\t\t\t\t\tlaunch process.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tIn doing so the Mycelians are creating very liquid\n\t\t\t\t\t\t\ttokens and granting exclusive access to their\n\t\t\t\t\t\t\tcommanders before any external forces can\n\t\t\t\t\t\t\tparticipate post launch. This is why a Mycelian\n\t\t\t\t\t\t\tcommander is one of the most desirable titles known\n\t\t\t\t\t\t\tto humanity.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tEvery Mycelian a commander reactivates increases his\n\t\t\t\t\t\t\tmax wallet restriction for their upcoming token\n\t\t\t\t\t\t\tlaunch by a certain amount. If for example one mints\n\t\t\t\t\t\t\ta legendary hive-chieftain Mycelian, their max\n\t\t\t\t\t\t\twallet restriction is automatically raised by a\n\t\t\t\t\t\t\twhole 1%. These raises stack up so 2 legendary\n\t\t\t\t\t\t\tMycelian will raise the restriction by 2%.\n\t\t\t\t\t\t</s.TextP>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel\n\t\t\t\t\t\tstyle={{ fontFamily: \"RoadRage\", color: \"#050F3880\" }}\n\t\t\t\t\t\theader=\"How can I reactivate a Mycelian?\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<s.TextP style={{ textAlign: \"left\" }}>\n\t\t\t\t\t\t\tTo reactivate a Mycelian simply go to the{\" \"}\n\t\t\t\t\t\t\t<s.StyledLink\n\t\t\t\t\t\t\t\tonClick={() => setCurrPage(\"Gallery\")}\n\t\t\t\t\t\t\t\tstyle={{ margin: \"0 0.2rem\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\"Reactivate a Gen 1 Mycelian\"\n\t\t\t\t\t\t\t</s.StyledLink>{\" \"}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tpage, connect your MetaMask wallet, choose the\n\t\t\t\t\t\t\tnumber of Mycelians you would like to reactivate and\n\t\t\t\t\t\t\tclick mint. While anyone can reactivate Gen 1\n\t\t\t\t\t\t\tMycelians, Only commanders may be awarded the full\n\t\t\t\t\t\t\tbenefits of commanding a Gen 1 Mycelian. To become a\n\t\t\t\t\t\t\tcommander, one must hold at least 1m MELT tokens,\n\t\t\t\t\t\t\twhich can be purchased on Pulsex.com\n\t\t\t\t\t\t</s.TextP>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel\n\t\t\t\t\t\tstyle={{ fontFamily: \"RoadRage\", color: \"#050F3880\" }}\n\t\t\t\t\t\theader=\"How much does it cost to reactivate a Mycelian?\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<s.TextP style={{ textAlign: \"left\" }}>\n\t\t\t\t\t\t\tA Gen 1 Mycelian costs {cost} {nativeCurrencySymbol}{\" \"}\n\t\t\t\t\t\t\teach to mint. If the commander has the special MELT\n\t\t\t\t\t\t\tCypher, they can enter it on the reactivation page\n\t\t\t\t\t\t\tfor a reduced reactivation cost of {WLCost}{\" \"}\n\t\t\t\t\t\t\t{nativeCurrencySymbol}.\n\t\t\t\t\t\t</s.TextP>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel\n\t\t\t\t\t\tstyle={{ fontFamily: \"RoadRage\", color: \"#050F3880\" }}\n\t\t\t\t\t\theader=\"Can I choose which category I want to mint?\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<s.TextP style={{ textAlign: \"left\" }}>\n\t\t\t\t\t\t\tThe damage the mycelium caused to our world was\n\t\t\t\t\t\t\textensive, and we've lost the ability to track our\n\t\t\t\t\t\t\tMycelians that are out there in the dark. As a\n\t\t\t\t\t\t\tresult commanders have no choice but to reactivate\n\t\t\t\t\t\t\tthem blindly, which means that you can't know what\n\t\t\t\t\t\t\tcategory a Mycelian will belong to until they're\n\t\t\t\t\t\t\tback home safely. Good luck to you commander!\n\t\t\t\t\t\t</s.TextP>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t<Panel\n\t\t\t\t\t\tstyle={{ fontFamily: \"RoadRage\", color: \"#050F3880\" }}\n\t\t\t\t\t\theader=\"How many Mycelians can one reactivate?\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<s.TextP style={{ textAlign: \"left\" }}>\n\t\t\t\t\t\t\tA commander can mint as many as they wish, the more\n\t\t\t\t\t\t\tthey mint the greater their odds of defeating the\n\t\t\t\t\t\t\tscourge. Only {maxSupply} Gen 1 Mycelians were ever\n\t\t\t\t\t\t\tmade and unfortunately we cannot hope to reactivate\n\t\t\t\t\t\t\tany more.\n\t\t\t\t\t\t</s.TextP>\n\t\t\t\t\t</Panel>\n\t\t\t\t\t{/*              <Panel style={{color: \"#e10f96\"}} header=\"question any legal restrictions apply to the mint?\">\n              <s.TextP style={{textAlign: \"left\"}}>\n                Yes, you are not allowed to participate in the mint in any way if you are a resident or \n                citizen of the US or any of OFAC's sanctioned jurisdictions (read more: https://home.treasury.gov/policy-issues/financial-sanctions/sanctions-programs-and-country-information), \n                or if your participation is in violation of applicable laws in your jurisdiction.\n              </s.TextP>\n              </Panel>\n*/}{\" \"}\n\t\t\t\t</PanelGroup>\n\t\t\t)}\n\t\t</s.SecContainer>\n\t);\n};\n","import { useAppContext } from \"../context/AppContext\";\nimport * as s from \"../styles/globalStyles\";\nimport { LiaTelegramPlane } from \"react-icons/lia\";\nimport { PiTwitterLogo } from \"react-icons/pi\";\nimport { TbBrandDiscord } from \"react-icons/tb\";\nimport { SiOpensea } from \"react-icons/si\";\n\nexport const FooterSection = () => {\n\tconst {\n\t\tconfig,\n\t\tcontractsList: { NFT: NFTContractAddress },\n\t\tfooterIconSize,\n\t} = useAppContext();\n\n\treturn (\n\t\t<s.SecContainer id=\"\">\n\t\t\t<s.socialDiv>\n\t\t\t\t<a href={config.Telegram} target={\"_blank\"}>\n\t\t\t\t\t{/* <s.Icons src=\"/config/images/telegram.svg\" alt=\"telegram\" /> */}\n\t\t\t\t\t<s.iconDiv>\n\t\t\t\t\t\t<LiaTelegramPlane\n\t\t\t\t\t\t\tsize={footerIconSize}\n\t\t\t\t\t\t\tcolor={\"#FF0800FF\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</s.iconDiv>\n\t\t\t\t</a>\n\t\t\t\t<a href={config.Twitter} target={\"_blank\"}>\n\t\t\t\t\t<s.iconDiv>\n\t\t\t\t\t\t<PiTwitterLogo\n\t\t\t\t\t\t\tsize={footerIconSize}\n\t\t\t\t\t\t\tcolor={\"#FF0800FF\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</s.iconDiv>\n\t\t\t\t</a>\n\t\t\t\t<a href={config.Discord} target={\"_blank\"}>\n\t\t\t\t\t{/* <s.Icons src=\"/config/images/discord.svg\" alt=\"discord\" /> */}\n\t\t\t\t\t<s.iconDiv>\n\t\t\t\t\t\t<TbBrandDiscord\n\t\t\t\t\t\t\tsize={footerIconSize}\n\t\t\t\t\t\t\tcolor={\"#FF0800FF\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</s.iconDiv>\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\thref={`${config.MARKETPLACE_LINK}/${NFTContractAddress}`}\n\t\t\t\t\ttarget={\"_blank\"}\n\t\t\t\t>\n\t\t\t\t\t{/* <s.Icons src=\"/config/images/opensea.svg\" alt=\"opensea\" /> */}\n\t\t\t\t\t<s.iconDiv>\n\t\t\t\t\t\t<SiOpensea size={footerIconSize} color={\"#FF0800FF\"} />\n\t\t\t\t\t</s.iconDiv>\n\t\t\t\t</a>\n\t\t\t</s.socialDiv>\n\t\t\t<s.SpacerLarge />\n\t\t\t<s.TextP style={{ backgroundColor: \"#0000\", padding: \"0px\" }}>\n\t\t\t\tCopyright © {new Date().getFullYear()} {config.NFT_NAME}\n\t\t\t</s.TextP>\n\t\t</s.SecContainer>\n\t);\n};\n","import * as s from \"../styles/globalStyles\";\nimport React from 'react'\n\nexport const Diamonds = () => {\n\n  return (\n      <s.SecContainer id=\"diamonds\">\n        <s.TextTitle style={s.opaqueBgStyles}>\n          The Goddess returns. <br/>\n          Claim your spoils of war. <br/>\n          Coming soon.\n        </s.TextTitle>\n        <s.StyledImgSplash key={'/config/images/force2.jpg'} src={'/config/images/force2.jpg'} type=\"image/jpg\" opacityOverride={0.5}\n        style={{maxWidth: \"clamp(300px, 50vw, 600px\"}}/>\n      </s.SecContainer>\n    )\n}","import react, { useEffect, useState } from \"react\";\nimport * as s from \"../styles/globalStyles\";\nimport { useAppContext } from \"../context/AppContext\";\nimport { utils } from \"ethers\";\n\nexport const UnauthedScreen = () => {\n\tconst { authPass, pw, setPw, setAuthed } = useAppContext();\n\tlet canPass =\n\t\tauthPass?.length > 0 &&\n\t\tpw?.length > 0 &&\n\t\tauthPass === utils.solidityKeccak256([\"string\"], [pw.toLowerCase()]);\n\tuseEffect(() => {\n\t\tif (canPass) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetAuthed(true);\n\t\t\t}, 7000);\n\t\t}\n\t\treturn () => {};\n\t}, [pw]);\n\n\tconst styleObj = (canPass && { color: \"green\" }) || {};\n\tconst borderObj = { border: \"3px red solid\", animation: \"\" };\n\tconst animatedInput = !canPass && (\n\t\t<s.InputOAnimated\n\t\t\tstyle={styleObj}\n\t\t\taDelay={12}\n\t\t\tvalue={pw}\n\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\tsetPw(e.target.value)\n\t\t\t}\n\t\t\tdisabled={canPass}\n\t\t/>\n\t);\n\tconst aBorder = { aBorder: (canPass && \"#00FF00\") || \"#FF0000\" };\n\tconst unauthContent = (\n\t\t<s.UnauthContainer flex={1}>\n\t\t\t<s.TextTitle {...aBorder} style={{ ...s.opaqueBgStyles }}>\n\t\t\t\t<s.TextTitleAnimated>Intruder alert:</s.TextTitleAnimated>\n\t\t\t\t<br />\n\t\t\t\t<s.TextTitleAnimated aDelay={2}>\n\t\t\t\t\tUnauthorized access.\n\t\t\t\t</s.TextTitleAnimated>\n\t\t\t\t<br />\n\t\t\t\t<s.TextTitleAnimated aDelay={4}>\n\t\t\t\t\tControl center:\n\t\t\t\t</s.TextTitleAnimated>\n\t\t\t\t<br />\n\t\t\t\t<s.TextTitleAnimated aDelay={6}>\n\t\t\t\t\tAccess restricted.\n\t\t\t\t</s.TextTitleAnimated>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<s.TextTitleAnimated aDelay={8}>\n\t\t\t\t\tEnter your MELT\n\t\t\t\t</s.TextTitleAnimated>\n\t\t\t\t<br />\n\t\t\t\t<s.TextTitleAnimated aDelay={10}>\n\t\t\t\t\tCypher to procced:\n\t\t\t\t</s.TextTitleAnimated>\n\t\t\t\t{animatedInput}{\" \"}\n\t\t\t</s.TextTitle>\n\t\t</s.UnauthContainer>\n\t);\n\n\tconst postAuthContent = (\n\t\t<s.UnauthContainer flex={1}>\n\t\t\t<s.TextTitle {...aBorder} style={s.opaqueBgStyles}>\n\t\t\t\t<s.TextTitleAnimated key={`${canPass}-1`} style={styleObj}>\n\t\t\t\t\tCypher accepted.\n\t\t\t\t</s.TextTitleAnimated>\n\t\t\t\t<br />\n\t\t\t\t<s.TextTitleAnimated\n\t\t\t\t\tkey={`${canPass}-2`}\n\t\t\t\t\tstyle={styleObj}\n\t\t\t\t\taDelay={2}\n\t\t\t\t>\n\t\t\t\t\tAccess granted.\n\t\t\t\t</s.TextTitleAnimated>\n\t\t\t\t<br />\n\t\t\t\t<s.TextTitleAnimated\n\t\t\t\t\tkey={`${canPass}-3`}\n\t\t\t\t\tstyle={styleObj}\n\t\t\t\t\taDelay={4}\n\t\t\t\t>\n\t\t\t\t\tWelcome Commander.\n\t\t\t\t</s.TextTitleAnimated>\n\t\t\t\t<br />\n\t\t\t\t{animatedInput}\n\t\t\t</s.TextTitle>\n\t\t</s.UnauthContainer>\n\t);\n\n\treturn (canPass && postAuthContent) || unauthContent;\n};\n","import * as s from \"../styles/globalStyles\";\nimport { useAppContext } from \"../context/AppContext\";\nimport {\n\tHeaderContainer,\n\tMintArea,\n\tTitleContainer,\n\tStorySection,\n\tCarouselSection,\n\tFAQSection,\n\tFooterSection,\n\tDiamonds,\n\tHistorySection,\n} from \"./index.js\";\n\nexport const AuthedScreen = () => {\n\tconst { currPage } = useAppContext();\n\n\treturn (\n\t\t<s.Container flex={1}>\n\t\t\t<HeaderContainer />\n\t\t\t{/* <CacheBgs /> */}\n\t\t\t{currPage === \"MintPage\" && (\n\t\t\t\t<s.SecContainer>\n\t\t\t\t\t<s.SpacerLarge />\n\n\t\t\t\t\t<TitleContainer />\n\t\t\t\t\t<s.SpacerSmall />\n\n\t\t\t\t\t<MintArea />\n\t\t\t\t</s.SecContainer>\n\t\t\t)}\n\t\t\t<s.SpacerLarge />\n\t\t\t{currPage === \"Story\" && (\n\t\t\t\t<s.BigContainer>\n\t\t\t\t\t<StorySection />\n\t\t\t\t</s.BigContainer>\n\t\t\t)}\n\t\t\t{currPage === \"Gallery\" && (\n\t\t\t\t<s.BigContainer>\n\t\t\t\t\t<CarouselSection />\n\t\t\t\t</s.BigContainer>\n\t\t\t)}\n\t\t\t{currPage === \"History\" && (\n\t\t\t\t<s.BigContainer>\n\t\t\t\t\t<HistorySection />\n\t\t\t\t</s.BigContainer>\n\t\t\t)}\n\t\t\t{currPage === \"FAQ\" && (\n\t\t\t\t<s.BigContainer>\n\t\t\t\t\t<FAQSection />\n\t\t\t\t</s.BigContainer>\n\t\t\t)}\n\t\t\t{currPage === \"royalDiamonds\" && (\n\t\t\t\t<s.BigContainer>\n\t\t\t\t\t<Diamonds />\n\t\t\t\t</s.BigContainer>\n\t\t\t)}\n\t\t\t<FooterSection />\n\t\t\t{/*<s.SpacerMedium />*/}\n\t\t</s.Container>\n\t);\n};\n","import { useEffect, useState } from \"react\";\nimport { useAppContext } from \"../context/AppContext\";\nimport * as s from \"../styles/globalStyles\";\n\nexport const TokenView = () => {\n\tconst { fileExt } = useAppContext();\n\n\tconst metadata = [\n\t\t{\n\t\t\ttitle: \"In the beginning, there was ambition\",\n\t\t\ttext: `In a future where humans coexist with advanced cybernetic beings known as \"Synths,\" a brilliant scientist's groundbreaking experiment integrates mycelium, an organic fungal network, with cybernetic technology. \n            `,\n\t\t},\n\t\t{\n\t\t\ttitle: \"Ambition led to hope\",\n\t\t\ttext: \"The result: MycoSynths, female cybernetic robots infused with living mycelium, possessing astonishing abilities to communicate with plants and harness nature's power.\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Hope blinded us\",\n\t\t\ttext: \"Initially celebrated as eco-saviors, the MycoSynths became unwitting pawns in a sinister agenda when the mycelium's mysterious intelligence gradually took control.\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"And in our blindness, evil prospered\",\n\t\t\ttext: \"Now under its dominion, these once-hopeful creations secretly plot the takeover of planet Earth, the battle for the future of our planet ins in your hands.\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"This mission is now yours, commander.\",\n\t\t\ttext: \"Luckily, MycoSynths (mycelians) were all designed with remote a reactivation switch that allows you to reassert control. Your goal, commander, is to reactivate as many as you can to have the best chance to hold back the scourge.\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Acquire MELT Tokens\",\n\t\t\ttext: \"Every reactivated unit is powered by $MELT (Mycelium Ecosystem Liquidity Token), a form of currency that allows the resistance to coordinate planetary actions against the scourge. One must first acquire 1m tokens to become a Mycelian Commander.\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Reactivate your mycelian squad\",\n\t\t\ttext: \"Every reactivation uncovers the rank-category each Mycelian belongs to. The higher the rank the greater the access it grants you to launches of very liquid tokens forged by the Mycelians.\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Participate in the ecosystem and defeat the scourge\",\n\t\t\ttext: \"The access you're granted is unique and is shared only with other commanders. Commanders will always step onto the battlefield first with their mycelian squads before clearing it for our remaining forces.\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"We are brave, united and we will win.\",\n\t\t\ttext: \"Our world was one beautiful and with your help we will make so once again. Onwards to battle, commander!\",\n\t\t},\n\t];\n\tconst numImages = Object.keys(metadata).length;\n\tconst [currChar, setCurrChar] = useState(1);\n\tconst currImg = `/config/images/story${currChar}.${fileExt}`;\n\t// console.log(currImg);\n\tconst currTitle = metadata[currChar - 1]?.title || \"\";\n\tconst currText = metadata[currChar - 1]?.text || \"\";\n\n\tconst selectionFn = (x: number) => Math.min(numImages, (x % numImages) + 1);\n\t// const randomFn = (x) => 1 + parseInt(Math.random() * numImages);\n\n\tuseEffect(() => {\n\t\tconst intervalId = setInterval(() => {\n\t\t\tsetCurrChar((x) => selectionFn(x));\n\t\t}, 12500);\n\t\treturn () => clearInterval(intervalId);\n\t}, []);\n\n\treturn (\n\t\t<s.ResponsiveWrapper\n\t\t\tflex={1}\n\t\t\tstyle={{\n\t\t\t\t// padding: 24,\n\t\t\t\t// flexDirection: `row${(currChar % 2 && \"-reverse\") || \"\"}`,\n\t\t\t\tjustifyContent: \"space-around\",\n\t\t\t\t...s.opaqueBgStyles,\n\t\t\t\tbackground: \"none\",\n\t\t\t\tborder: \"none\",\n\t\t\t\t// flexDirection: \"row-reverse\",\n\t\t\t}}\n\t\t>\n\t\t\t{Array.from(Array(numImages).keys())\n\t\t\t\t.map((x) => x + 1)\n\t\t\t\t.map((x: number, i: number) => {\n\t\t\t\t\tconst tempImg = `/config/images/story${i + 1}.${fileExt}`;\n\t\t\t\t\tconst styleObj = (tempImg === currImg && {\n\t\t\t\t\t\topacity: \"0.8\",\n\t\t\t\t\t}) || { display: \"none\" };\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<s.StyledImgMain\n\t\t\t\t\t\t\tkey={tempImg}\n\t\t\t\t\t\t\tsrc={tempImg}\n\t\t\t\t\t\t\ttype=\"image/jpg\"\n\t\t\t\t\t\t\tstyle={styleObj}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t{Array.from(Array(numImages).keys())\n\t\t\t\t.map((x) => x + 1)\n\t\t\t\t.map((x: number, i: number) => {\n\t\t\t\t\tconst title = metadata[x - 1]?.title || \"\";\n\t\t\t\t\tconst text = metadata[x - 1]?.text || \"\";\n\t\t\t\t\tconst styleObj = (title === currTitle && {\n\t\t\t\t\t\topacity: \"1\",\n\t\t\t\t\t}) || { display: \"none\" };\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<s.Container\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tstyle={{ ...styleObj, ...s.opaqueBgStyles }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<s.SpacerMedium />\n\t\t\t\t\t\t\t<s.TextTitle\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\t\t\tminWidth: \"30vw\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t</s.TextTitle>\n\n\t\t\t\t\t\t\t{/* <s.SpacerLarge /> */}\n\t\t\t\t\t\t\t<s.TextB>\n\t\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t</s.TextB>\n\t\t\t\t\t\t</s.Container>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t</s.ResponsiveWrapper>\n\t);\n};\n","import { useAppContext } from \"../context/AppContext\";\nimport * as s from \"../styles/globalStyles\";\nimport { TokenView } from \"./index\";\n\nexport const HistorySection = () => {\n\treturn (\n\t\t<s.SecContainer id=\"history\">\n\t\t\t<s.TextTitle style={s.opaqueBgStyles}>\n\t\t\t\tA World in ruins that once was beautiful.\n\t\t\t\t<br />\n\t\t\t\tOur fate now lies in your hands commander.\n\t\t\t</s.TextTitle>\n\t\t\t<s.SpacerLarge />\n\t\t\t<TokenView />\n\t\t</s.SecContainer>\n\t);\n};\n","import react, { useEffect, useState } from \"react\";\nimport * as s from \"./styles/globalStyles\";\nimport \"rsuite/styles/index.less\";\nimport \"rsuite/dist/rsuite.css\";\nimport { useAppContext } from \"./context/AppContext\";\nimport { UnauthedScreen, AuthedScreen } from \"./components/index.js\";\n\nfunction App() {\n\tconst {\n\t\tbgImages,\n\t\tCacheBgsNew,\n\t\tcurrPage,\n\t\tauthed,\n\t\tuseContractConfig,\n\t\tcontractsList,\n\t\tsetContractsList,\n\t} = useAppContext();\n\tCacheBgsNew();\n\n\tconst conf = useContractConfig({ refresh: 30 });\n\tlet isMounted;\n\n\tuseEffect(() => {\n\t\tisMounted = true;\n\t\tif (isMounted) {\n\t\t\tif (\n\t\t\t\t!!conf &&\n\t\t\t\ttypeof conf === \"object\" &&\n\t\t\t\tObject.keys(conf)?.length > 0\n\t\t\t) {\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tObject.entries(conf).forEach(([x, y]) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcontractsList?.[x]?.toString().toLowerCase() !==\n\t\t\t\t\t\ty?.toString()?.toLowerCase()\n\t\t\t\t\t)\n\t\t\t\t\t\tshouldUpdate = true;\n\t\t\t\t});\n\t\t\t\tif (!shouldUpdate) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.log(\"updating now...\", new Date());\n\n\t\t\t\tconst newContractsList = { ...contractsList, ...conf };\n\t\t\t\tsetContractsList(newContractsList);\n\t\t\t}\n\t\t}\n\t\treturn () => (isMounted = false);\n\t}, [conf]);\n\n\treturn (\n\t\t<s.Screen\n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: `url('config/images/${bgImages[currPage]}')`,\n\t\t\t}}\n\t\t>\n\t\t\t{(authed && <AuthedScreen />) || <UnauthedScreen />}\n\t\t</s.Screen>\n\t);\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/RenoMono.8b239c68.otf\";","export default __webpack_public_path__ + \"static/media/upheavtt.e3d365ba.ttf\";","export default __webpack_public_path__ + \"static/media/RoadRage.03e8327b.otf\";","export default __webpack_public_path__ + \"static/media/Momo.ebbecc6e.otf\";","export default __webpack_public_path__ + \"static/media/Roboto-Regular.f25bd059.ttf\";","export default __webpack_public_path__ + \"static/media/Roboto-Light.03e629f6.ttf\";","export default __webpack_public_path__ + \"static/media/ROGFontsv1.6-Regular.27fd353e.ttf\";","export default __webpack_public_path__ + \"static/media/Sphere.e7363c8d.otf\";","export default __webpack_public_path__ + \"static/media/Puna.1b6bb90b.otf\";","import { createGlobalStyle } from \"styled-components\";\nimport RenoMono from \"./fonts/RenoMono.otf\";\nimport RoadRage from \"./fonts/RoadRage.otf\";\nimport Momo from \"./fonts/Momo.otf\";\nimport Upheaval from \"./fonts/upheavtt.ttf\";\nimport Roboto from \"./fonts/Roboto-Regular.ttf\";\nimport RobotoLight from \"./fonts/Roboto-Light.ttf\";\nimport ROG from \"./fonts/ROGFontsv1.6-Regular.ttf\";\n\n// import Gumball from './Gumball.ttf';\nimport Puna from \"./fonts/Puna.otf\";\nimport Sphere from \"./fonts/Sphere.otf\";\nconst GlobalStyle = createGlobalStyle`\n\n    @font-face {\n        font-family: 'ROG';\n        src: url(${ROG}) format('truetype');\n    }\n\n    @font-face {\n        font-family: 'Roboto';\n        src: url(${Roboto}) format('truetype');\n    }\n\n    @font-face {\n        font-family: 'RobotoLight';\n        src: url(${RobotoLight}) format('truetype');\n    }\n\n    @font-face {\n        font-family: 'Upheaval';\n        src: url(${Upheaval}) format('truetype');\n    }\n\n    @font-face {\n        font-family: 'Renomono';\n        src: url(${RenoMono}) format('opentype');\n    }\n\n    @font-face {\n        font-family: 'RoadRage';\n        size-adjust: 40%;\n        // font-weight: Bold;\n        src: url(${Sphere}) format('opentype');\n    }\n\n`;\n\n// export const Renomono = createGlobalStyle`\n//     @font-face {\n//         font-family: 'Renomono';\n//         src: url(${RenoMono}) format('opentype');\n//     }\n// `;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport GlobalStyle from \"./fonts\";\nimport { AppProvider } from \"./context/AppContext\";\n\nimport { DAppProvider, Mainnet } from \"@usedapp/core\";\nimport { ConfigProvider } from \"@usedapp/core/dist/esm/src/providers\";\nimport { Arbi, ETHMainnet, Pulse } from \"./context/chains\";\n\nconst customChain = Pulse;\n\nconst config = {\n\tnetworks: [customChain],\n\treadOnlyChainId: customChain.chainId,\n\treadOnlyUrls: {\n\t\t[customChain.chainId]: customChain.rpcUrl,\n\t},\n};\n\nReactDOM.render(\n\t<DAppProvider config={config}>\n\t\t<ConfigProvider config={config}>\n\t\t\t<Provider store={store}>\n\t\t\t\t<GlobalStyle />\n\t\t\t\t<AppProvider>\n\t\t\t\t\t<App />\n\t\t\t\t</AppProvider>\n\t\t\t</Provider>\n\t\t</ConfigProvider>\n\t</DAppProvider>,\n\tdocument.getElementById(\"root\")\n);\n","export const ETHMainnet = {\n\tchainId: 1,\n\tchainName: \"ETH\",\n\tisTestChain: false,\n\tisLocalChain: false,\n\tmulticallAddress: \"0x5ba1e12693dc8f9c48aad8770482f4739beed696\",\n\tgetExplorerAddressLink: (address) =>\n\t\t`https://etherscan.io/address/${address}`,\n\tgetExplorerTransactionLink: (transactionHash) =>\n\t\t`https://etherscan.io/tx/${transactionHash}`,\n\trpcUrl: \"https://ethereum.publicnode.com\",\n\tblockExplorerUrl: \"https://etherscan.io\",\n\tnativeCurrency: {\n\t\tname: \"ETH\",\n\t\tsymbol: \"ETH\",\n\t\tdecimals: 18,\n\t},\n};\n\nexport const Arbi = {\n\tchainId: 42161,\n\tchainName: \"ETH\",\n\tisTestChain: false,\n\tisLocalChain: false,\n\tmulticallAddress: \"0x80C7DD17B01855a6D2347444a0FCC36136a314de\",\n\tgetExplorerAddressLink: (address) =>\n\t\t`https://arbiscan.io/address/${address}`,\n\tgetExplorerTransactionLink: (transactionHash) =>\n\t\t`https://arbiscan.io/tx/${transactionHash}`,\n\trpcUrl: \"https://1rpc.io/arb\",\n\tblockExplorerUrl: \"https://arbiscan.io\",\n\tnativeCurrency: {\n\t\tname: \"ETH\",\n\t\tsymbol: \"ETH\",\n\t\tdecimals: 18,\n\t},\n};\n\nexport const Pulse = {\n\tchainId: 369,\n\tchainName: \"Pulse\",\n\tisTestChain: false,\n\tisLocalChain: false,\n\tmulticallAddress: \"0x2f42a1e4ce7A590F94A75F38eBaFFa45E9a68ee1\",\n\tgetExplorerAddressLink: (address) =>\n\t\t`https://otter.pulsechain.com/address/${address}`,\n\tgetExplorerTransactionLink: (transactionHash) =>\n\t\t`https://otter.pulsechain.com/tx/${transactionHash}`,\n\t// rpcUrl: \"https://pulsechain.publicnode.com\",\n\trpcUrl: \"https://rpc.pulsechain.com\",\n\tblockExplorerUrl: \"https://otter.pulsechain.com\",\n\tnativeCurrency: {\n\t\tname: \"PLS\",\n\t\tsymbol: \"PLS\",\n\t\tdecimals: 18,\n\t},\n};\n"],"sourceRoot":""}